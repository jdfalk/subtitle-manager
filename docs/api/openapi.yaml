# file: docs/api/openapi.yaml
# version: 1.0.0
# guid: 550e8400-e29b-41d4-a716-446655440001

openapi: 3.0.3
info:
  title: Subtitle Manager API
  description: |
    A comprehensive REST API for managing subtitle files, translations, and media integrations.

    ## Authentication

    The API supports multiple authentication methods:
    - **Session Cookies**: For web UI authentication
    - **API Keys**: Send via `X-API-Key` header
    - **OAuth2**: GitHub OAuth2 integration

    ## Authorization Levels

    - `read`: View-only access to resources
    - `basic`: Standard user operations (download, convert, translate)
    - `admin`: Administrative operations (user management, system config)

    ## Error Handling

    Errors are returned as JSON objects with `error` and `message` fields:
    ```json
    {
      "error": "invalid_request",
      "message": "Missing required parameter"
    }
    ```

    ## Rate Limiting

    API requests are subject to rate limiting based on user role:
    - Read operations: 1000 requests/hour
    - Basic operations: 500 requests/hour  
    - Admin operations: 200 requests/hour

  version: "1.0.0"
  contact:
    name: Subtitle Manager
    url: https://github.com/jdfalk/subtitle-manager
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://subtitles.example.com
    description: Production server

security:
  - sessionCookie: []
  - apiKey: []
  - oauth2: []

paths:
  # Authentication Endpoints
  /api/login:
    post:
      tags:
        - Authentication
      summary: Authenticate user
      description: Authenticate with username/password and create session
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Username or email
                  example: admin
                password:
                  type: string
                  format: password
                  description: User password
                  example: password123
      responses:
        "200":
          description: Login successful
          headers:
            Set-Cookie:
              description: Session cookie
              schema:
                type: string
                example: session=abc123; HttpOnly; Secure; SameSite=Strict
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                    format: int64
                    description: User ID
                  username:
                    type: string
                    description: Username
                  role:
                    type: string
                    enum: [read, basic, admin]
                    description: User role/permission level
        "401":
          $ref: "#/components/responses/Unauthorized"
        "400":
          $ref: "#/components/responses/BadRequest"

  /api/logout:
    post:
      tags:
        - Authentication
      summary: Logout user
      description: Invalidate current session
      operationId: logout
      security:
        - sessionCookie: []
      responses:
        "204":
          description: Logout successful
        "401":
          $ref: "#/components/responses/Unauthorized"

  # Setup Endpoints
  /api/setup/status:
    get:
      tags:
        - Setup
      summary: Check setup status
      description: Determine if initial setup is required
      operationId: getSetupStatus
      security: []
      responses:
        "200":
          description: Setup status
          content:
            application/json:
              schema:
                type: object
                properties:
                  setup_needed:
                    type: boolean
                    description: Whether initial setup is required

  /api/setup:
    post:
      tags:
        - Setup
      summary: Perform initial setup
      description: Create initial admin user and configure basic settings
      operationId: performSetup
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - admin_user
                - admin_pass
              properties:
                admin_user:
                  type: string
                  description: Initial admin username
                admin_pass:
                  type: string
                  format: password
                  description: Initial admin password
                server_name:
                  type: string
                  description: Server display name
                reverse_proxy:
                  type: boolean
                  description: Whether running behind reverse proxy
                integrations:
                  type: object
                  additionalProperties: true
                  description: Integration settings
      responses:
        "204":
          description: Setup completed successfully
        "400":
          $ref: "#/components/responses/BadRequest"
        "409":
          description: Setup already completed

  # OAuth2 Endpoints
  /api/oauth/github/login:
    get:
      tags:
        - OAuth2
      summary: Start GitHub OAuth flow
      description: Redirect to GitHub for OAuth2 authentication
      operationId: githubOAuthLogin
      security: []
      responses:
        "302":
          description: Redirect to GitHub
          headers:
            Location:
              description: GitHub OAuth URL
              schema:
                type: string

  /api/oauth/github/callback:
    get:
      tags:
        - OAuth2
      summary: GitHub OAuth callback
      description: Handle GitHub OAuth2 callback with authorization code
      operationId: githubOAuthCallback
      security: []
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
          description: OAuth authorization code
        - name: state
          in: query
          required: false
          schema:
            type: string
          description: OAuth state parameter
      responses:
        "302":
          description: Redirect after successful login
          headers:
            Set-Cookie:
              description: Session cookie
              schema:
                type: string
            Location:
              description: Redirect URL
              schema:
                type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /api/oauth/github/generate:
    post:
      tags:
        - OAuth2
      summary: Generate GitHub OAuth credentials
      description: Generate new GitHub OAuth2 client ID and secret (admin only)
      operationId: generateGitHubOAuth
      security:
        - sessionCookie: []
        - apiKey: []
      responses:
        "200":
          description: OAuth credentials generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuthCredentials"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /api/oauth/github/regenerate:
    post:
      tags:
        - OAuth2
      summary: Regenerate GitHub OAuth secret
      description: Regenerate GitHub OAuth2 client secret (admin only)
      operationId: regenerateGitHubOAuth
      security:
        - sessionCookie: []
        - apiKey: []
      responses:
        "200":
          description: OAuth secret regenerated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuthCredentials"
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/Forbidden"

  /api/oauth/github/reset:
    post:
      tags:
        - OAuth2
      summary: Reset GitHub OAuth configuration
      description: Clear GitHub OAuth2 configuration (admin only)
      operationId: resetGitHubOAuth
      security:
        - sessionCookie: []
        - apiKey: []
      responses:
        "204":
          description: OAuth configuration reset
        "403":
          $ref: "#/components/responses/Forbidden"

  # Configuration Endpoints
  /api/config:
    get:
      tags:
        - Configuration
      summary: Get configuration
      description: Retrieve current application configuration
      operationId: getConfig
      security:
        - sessionCookie: []
        - apiKey: []
      responses:
        "200":
          description: Current configuration
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                description: Configuration key-value pairs
        "401":
          $ref: "#/components/responses/Unauthorized"

  # Subtitle Operations
  /api/convert:
    post:
      tags:
        - Subtitles
      summary: Convert subtitle file
      description: Convert uploaded subtitle file to SRT format
      operationId: convertSubtitle
      security:
        - sessionCookie: []
        - apiKey: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: Subtitle file to convert
      responses:
        "200":
          description: Converted SRT file
          headers:
            Content-Type:
              schema:
                type: string
                example: application/x-subrip
            Content-Disposition:
              schema:
                type: string
                example: attachment; filename="converted.srt"
          content:
            application/x-subrip:
              schema:
                type: string
                format: binary
                description: SRT subtitle file content
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /api/translate:
    post:
      tags:
        - Subtitles
      summary: Translate subtitle file
      description: Translate uploaded subtitle file to target language
      operationId: translateSubtitle
      security:
        - sessionCookie: []
        - apiKey: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - language
              properties:
                file:
                  type: string
                  format: binary
                  description: Subtitle file to translate
                language:
                  type: string
                  description: Target language code (ISO 639-1)
                  example: es
                provider:
                  type: string
                  description: Translation provider
                  enum: [google, openai]
                  default: google
      responses:
        "200":
          description: Translated subtitle file
          headers:
            Content-Type:
              schema:
                type: string
                example: application/x-subrip
            Content-Disposition:
              schema:
                type: string
                example: attachment; filename="translated.srt"
          content:
            application/x-subrip:
              schema:
                type: string
                format: binary
                description: Translated SRT subtitle file
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /api/extract:
    post:
      tags:
        - Subtitles
      summary: Extract embedded subtitles
      description: Extract embedded subtitles from video file
      operationId: extractSubtitles
      security:
        - sessionCookie: []
        - apiKey: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: Video file to extract subtitles from
                language:
                  type: string
                  description: Preferred subtitle language
                  example: en
                track:
                  type: integer
                  description: Subtitle track number (0-based)
                  default: 0
      responses:
        "200":
          description: Extracted subtitle file
          headers:
            Content-Type:
              schema:
                type: string
                example: application/x-subrip
            Content-Disposition:
              schema:
                type: string
                example: attachment; filename="extracted.srt"
          content:
            application/x-subrip:
              schema:
                type: string
                format: binary
                description: Extracted SRT subtitle file
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          description: No subtitles found in video file
        "500":
          $ref: "#/components/responses/InternalServerError"

  # Download and Scanning
  /api/download:
    post:
      tags:
        - Downloads
      summary: Download subtitles
      description: Download subtitles for media file using available providers
      operationId: downloadSubtitles
      security:
        - sessionCookie: []
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - path
                - language
              properties:
                path:
                  type: string
                  description: Media file path
                  example: /movies/example.mkv
                language:
                  type: string
                  description: Subtitle language (ISO 639-1)
                  example: en
                providers:
                  type: array
                  items:
                    type: string
                  description: Preferred providers (optional)
                  example: [opensubtitles, subscene]
      responses:
        "200":
          description: Subtitles downloaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  subtitle_path:
                    type: string
                    description: Path to downloaded subtitle file
                  provider:
                    type: string
                    description: Provider used
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          description: No subtitles found
        "500":
          $ref: "#/components/responses/InternalServerError"

  /api/scan:
    post:
      tags:
        - Library
      summary: Start library scan
      description: Start scanning media library for new files
      operationId: startLibraryScan
      security:
        - sessionCookie: []
        - apiKey: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
                  description: Specific path to scan (optional)
                force:
                  type: boolean
                  description: Force rescan of existing files
                  default: false
      responses:
        "202":
          description: Scan started
          content:
            application/json:
              schema:
                type: object
                properties:
                  scan_id:
                    type: string
                    description: Scan job ID
        "401":
          $ref: "#/components/responses/Unauthorized"
        "409":
          description: Scan already in progress

  /api/scan/status:
    get:
      tags:
        - Library
      summary: Get scan status
      description: Get current library scan progress
      operationId: getScanStatus
      security:
        - sessionCookie: []
        - apiKey: []
      responses:
        "200":
          description: Scan status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScanStatus"
        "401":
          $ref: "#/components/responses/Unauthorized"

  # History
  /api/history:
    get:
      tags:
        - History
      summary: Get operation history
      description: Retrieve history of subtitle operations
      operationId: getHistory
      security:
        - sessionCookie: []
        - apiKey: []
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/LimitParam"
        - name: type
          in: query
          schema:
            type: string
            enum: [download, convert, translate, extract]
          description: Filter by operation type
        - name: start_date
          in: query
          schema:
            type: string
            format: date-time
          description: Filter operations after this date
        - name: end_date
          in: query
          schema:
            type: string
            format: date-time
          description: Filter operations before this date
      responses:
        "200":
          description: Operation history
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/HistoryItem"
                  total:
                    type: integer
                    description: Total number of items
                  page:
                    type: integer
                    description: Current page number
                  limit:
                    type: integer
                    description: Items per page
        "401":
          $ref: "#/components/responses/Unauthorized"

  # System Information
  /api/system:
    get:
      tags:
        - System
      summary: Get system information
      description: Retrieve system status and information
      operationId: getSystemInfo
      security:
        - sessionCookie: []
        - apiKey: []
      responses:
        "200":
          description: System information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemInfo"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /api/logs:
    get:
      tags:
        - System
      summary: Get application logs
      description: Retrieve recent application log entries
      operationId: getLogs
      security:
        - sessionCookie: []
        - apiKey: []
      parameters:
        - name: level
          in: query
          schema:
            type: string
            enum: [debug, info, warn, error]
          description: Minimum log level
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          description: Maximum number of log entries
      responses:
        "200":
          description: Log entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogEntry"
        "401":
          $ref: "#/components/responses/Unauthorized"

components:
  securitySchemes:
    sessionCookie:
      type: apiKey
      in: cookie
      name: session
      description: Session-based authentication using HTTP-only cookies

    apiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key authentication for programmatic access

    oauth2:
      type: oauth2
      description: GitHub OAuth2 authentication
      flows:
        authorizationCode:
          authorizationUrl: https://github.com/login/oauth/authorize
          tokenUrl: https://github.com/login/oauth/access_token
          scopes:
            user:email: Access user email address

  parameters:
    PageParam:
      name: page
      in: query
      schema:
        type: integer
        minimum: 1
        default: 1
      description: Page number for pagination

    LimitParam:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      description: Number of items per page

  schemas:
    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
          example: invalid_request
        message:
          type: string
          description: Human-readable error message
          example: Missing required parameter

    OAuthCredentials:
      type: object
      properties:
        client_id:
          type: string
          description: OAuth2 client ID
          example: gh_1234567890abcdef
        client_secret:
          type: string
          description: OAuth2 client secret
          example: ghs_1234567890abcdef1234567890abcdef12345678
        redirect_url:
          type: string
          format: uri
          description: OAuth2 redirect URL
          example: https://example.com/api/oauth/github/callback

    ScanStatus:
      type: object
      properties:
        scanning:
          type: boolean
          description: Whether a scan is currently in progress
        progress:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Scan progress (0.0 to 1.0)
        current_path:
          type: string
          description: Currently scanning path
        files_processed:
          type: integer
          description: Number of files processed
        files_total:
          type: integer
          description: Total number of files to process
        start_time:
          type: string
          format: date-time
          description: Scan start time
        estimated_completion:
          type: string
          format: date-time
          description: Estimated completion time

    HistoryItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: History item ID
        type:
          type: string
          enum: [download, convert, translate, extract]
          description: Operation type
        file_path:
          type: string
          description: Source file path
        subtitle_path:
          type: string
          description: Resulting subtitle file path
        language:
          type: string
          description: Subtitle language
        provider:
          type: string
          description: Provider used (for downloads)
        status:
          type: string
          enum: [success, failed, pending]
          description: Operation status
        created_at:
          type: string
          format: date-time
          description: Operation timestamp
        user_id:
          type: integer
          format: int64
          description: User who performed the operation
        error_message:
          type: string
          description: Error message (if failed)

    SystemInfo:
      type: object
      properties:
        go_version:
          type: string
          description: Go runtime version
          example: go1.24.0
        os:
          type: string
          description: Operating system
          example: linux
        arch:
          type: string
          description: System architecture
          example: amd64
        goroutines:
          type: integer
          description: Number of active goroutines
        disk_free:
          type: integer
          format: int64
          description: Free disk space in bytes
        disk_total:
          type: integer
          format: int64
          description: Total disk space in bytes
        memory_usage:
          type: integer
          format: int64
          description: Current memory usage in bytes
        uptime:
          type: string
          description: System uptime
        version:
          type: string
          description: Application version

    LogEntry:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Log entry timestamp
        level:
          type: string
          enum: [debug, info, warn, error]
          description: Log level
        component:
          type: string
          description: Component that generated the log
        message:
          type: string
          description: Log message
        fields:
          type: object
          additionalProperties: true
          description: Additional log fields

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error: invalid_request
            message: Missing required parameter

    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error: unauthorized
            message: Authentication required

    Forbidden:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error: forbidden
            message: Admin access required

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error: not_found
            message: Resource not found

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error: internal_error
            message: An unexpected error occurred

tags:
  - name: Authentication
    description: User authentication and session management
  - name: Setup
    description: Initial application setup
  - name: OAuth2
    description: OAuth2 authentication management
  - name: Configuration
    description: Application configuration
  - name: Subtitles
    description: Subtitle file operations
  - name: Downloads
    description: Subtitle downloads from providers
  - name: Library
    description: Media library management
  - name: History
    description: Operation history and audit logs
  - name: System
    description: System information and monitoring

externalDocs:
  description: Subtitle Manager Documentation
  url: https://github.com/jdfalk/subtitle-manager/tree/main/docs
