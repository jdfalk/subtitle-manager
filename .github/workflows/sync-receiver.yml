# file: .github/workflows/sync-receiver.yml
# version: 1.1.0
# guid: f7g8h9i0-j1k2-l3m4-n5o6-p7q8r9s0t1u2

name: Sync Receiver

on:
  repository_dispatch:
    types: [sync-from-ghcommon]
  workflow_dispatch:
    inputs:
      sync_type:
        description: "Type of sync to perform"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - workflows
          - instructions
          - prompts
          - scripts
          - linters
          - labels

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  sync-from-ghcommon:
    name: Sync Files from ghcommon
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout ghcommon
        uses: actions/checkout@v5
        with:
          repository: jdfalk/ghcommon
          path: ghcommon-source
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set sync parameters
        id: params
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "sync_type=${{ github.event.client_payload.sync_type }}" >> $GITHUB_OUTPUT
            echo "source_repo=${{ github.event.client_payload.source_repo }}" >> $GITHUB_OUTPUT
            echo "source_sha=${{ github.event.client_payload.source_sha }}" >> $GITHUB_OUTPUT
          else
            echo "sync_type=${{ inputs.sync_type }}" >> $GITHUB_OUTPUT
            echo "source_repo=jdfalk/ghcommon" >> $GITHUB_OUTPUT
            echo "source_sha=manual-dispatch" >> $GITHUB_OUTPUT
          fi

      - name: Sync files based on type
        run: |
          sync_type="${{ steps.params.outputs.sync_type }}"
          echo "Performing sync of type: $sync_type"

          # Create directories if they don't exist
          mkdir -p .github/workflows
          mkdir -p .github/instructions
          mkdir -p .github/prompts
          mkdir -p scripts
          mkdir -p .github/linters

          case "$sync_type" in
            "all"|"workflows")
              echo "Syncing workflows..."
              # Copy specific workflows (not sync workflows to avoid recursion)
              cp ghcommon-source/.github/workflows/pr-automation.yml .github/workflows/ 2>/dev/null || true
              cp ghcommon-source/.github/workflows/release*.yml .github/workflows/ 2>/dev/null || true
              ;;&
            "all"|"instructions")
              echo "Syncing instructions..."
              cp ghcommon-source/.github/copilot-instructions.md .github/ 2>/dev/null || true
              cp ghcommon-source/.github/instructions/* .github/instructions/ 2>/dev/null || true
              ;;&
            "all"|"prompts")
              echo "Syncing prompts..."
              cp -r ghcommon-source/.github/prompts/* .github/prompts/ 2>/dev/null || true
              ;;&
            "all"|"scripts")
              echo "Syncing scripts..."
              cp -r ghcommon-source/scripts/* scripts/ 2>/dev/null || true
              ;;&
            "all"|"linters")
              echo "Syncing linters..."
              cp -r ghcommon-source/.github/linters/* .github/linters/ 2>/dev/null || true
              ;;&
            "all"|"labels")
              echo "Syncing labels..."
              cp ghcommon-source/labels.json . 2>/dev/null || true
              cp ghcommon-source/labels.md . 2>/dev/null || true
              ;;
          esac

          # Create symlinks for linters
          # Create .vscode directory if it doesn't exist
          mkdir -p .vscode

          # Create symlink to linters directory if it exists and .vscode/linters doesn't already exist
          if [ -d ".github/linters" ] && [ ! -e ".vscode/linters" ]; then
            ln -sf ../.github/linters .vscode/linters
            echo "Created symlink: .vscode/linters -> ../.github/linters"
          fi

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected:"
            git diff --name-only
          fi

      - name: Commit and push changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "sync: update files from ghcommon

          Source: ${{ steps.params.outputs.source_repo }}
          SHA: ${{ steps.params.outputs.source_sha }}
          Sync type: ${{ steps.params.outputs.sync_type }}"
          git push

      - name: Summary
        run: |
          echo "## Sync Receiver Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Sync Type:** ${{ steps.params.outputs.sync_type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Source Repo:** ${{ steps.params.outputs.source_repo }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Source SHA:** ${{ steps.params.outputs.source_sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Changes Made:** ${{ steps.changes.outputs.has_changes }}" >> $GITHUB_STEP_SUMMARY
