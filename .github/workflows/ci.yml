name: CI Pipeline

# Auto-cancel previous runs when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  actions: read
  checks: write

jobs:
  # This job determines what has changed to optimize workflow execution
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            backend:
              - '**/*.go'
              - 'go.mod'
              - 'go.sum'
              - 'pkg/**'
              - 'cmd/**'
              - 'proto/**'
              - 'scripts/**'
              - '.github/workflows/backend.yml'
            frontend:
              - 'webui/**'
              - '.github/workflows/frontend.yml'

  # Trigger backend workflow
  backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' || github.event_name == 'push' }}
    uses: jdfalk/subtitle-manager/.github/workflows/backend.yml@main
    secrets: inherit

  # Trigger frontend workflow
  frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' || github.event_name == 'push' }}
    uses: jdfalk/subtitle-manager/.github/workflows/frontend.yml@main
    secrets: inherit

  # Summary job that depends on both workflows
  ci-complete:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: always()
    steps:
      - name: Check workflow results
        run: |
          echo "Backend result: ${{ needs.backend.result }}"
          echo "Frontend result: ${{ needs.frontend.result }}"

          # Fail if any required workflow failed
          if [[ "${{ needs.backend.result }}" == "failure" ]] || [[ "${{ needs.frontend.result }}" == "failure" ]]; then
            echo "❌ One or more workflows failed"
            exit 1
          elif [[ "${{ needs.backend.result }}" == "skipped" ]] && [[ "${{ needs.frontend.result }}" == "skipped" ]]; then
            echo "⚠️ All workflows were skipped - no changes detected"
            exit 0
          elif [[ "${{ needs.backend.result }}" == "success" ]] || [[ "${{ needs.frontend.result }}" == "success" ]]; then
            echo "✅ All executed workflows completed successfully"
            echo "Note: Some tests may have been skipped due to missing dependencies (e.g., PostgreSQL), which is expected in CI"
            exit 0
          else
            echo "⚠️ Unexpected workflow states - treating as success"
            exit 0
          fi
