{
  "action": "create",
  "title": "Optimize Application Performance and Resource Usage",
  "body": "## Description
Identify and fix performance bottlenecks to improve response times and reduce resource usage.

## Optimization Areas

### Database
- Query optimization
- Index analysis
- Connection pooling
- Query caching
- Batch operations

### API Performance
- Response compression
- Pagination optimization
- Parallel processing
- Request caching
- CDN integration

### Frontend
- Code splitting
- Lazy loading
- Bundle optimization
- Image optimization
- Service worker

### Background Jobs
- Worker pool sizing
- Job prioritization
- Resource limits
- Batch processing

## Metrics to Track
- API response times
- Database query times
- Memory usage
- CPU utilization
- Concurrent users

## Acceptance Criteria
- [ ] 50% reduction in API response times
- [ ] 30% reduction in memory usage
- [ ] Database query optimization
- [ ] Frontend bundle < 500KB
- [ ] Load test passing 1000 users
- [ ] Performance monitoring dashboard",
  "labels": ["enhancement", "performance", "optimization", "priority-low"],
  "guid": "9664bf21-7ed5-4531-b5dc-31f30f1a4e88",
  "legacy_guid": "create-optimize-application-performance-and-resource-usage-2025-06-29"
}
