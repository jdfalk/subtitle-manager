// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: config.proto

//go:build protoopaque

package configpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Local AppenderType enum to replace gcommon dependency
// TODO: Replace with gcommon/v1/common/appender_type.proto when available
type AppenderType int32

const (
	AppenderType_APPENDER_TYPE_UNSPECIFIED AppenderType = 0
	AppenderType_APPENDER_TYPE_CONSOLE     AppenderType = 1
	AppenderType_APPENDER_TYPE_FILE        AppenderType = 2
	AppenderType_APPENDER_TYPE_SYSLOG      AppenderType = 3
	AppenderType_APPENDER_TYPE_NETWORK     AppenderType = 4
)

// Enum value maps for AppenderType.
var (
	AppenderType_name = map[int32]string{
		0: "APPENDER_TYPE_UNSPECIFIED",
		1: "APPENDER_TYPE_CONSOLE",
		2: "APPENDER_TYPE_FILE",
		3: "APPENDER_TYPE_SYSLOG",
		4: "APPENDER_TYPE_NETWORK",
	}
	AppenderType_value = map[string]int32{
		"APPENDER_TYPE_UNSPECIFIED": 0,
		"APPENDER_TYPE_CONSOLE":     1,
		"APPENDER_TYPE_FILE":        2,
		"APPENDER_TYPE_SYSLOG":      3,
		"APPENDER_TYPE_NETWORK":     4,
	}
)

func (x AppenderType) Enum() *AppenderType {
	p := new(AppenderType)
	*p = x
	return p
}

func (x AppenderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppenderType) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[0].Descriptor()
}

func (AppenderType) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[0]
}

func (x AppenderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type SubtitleManagerConfig struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DbPath          *string                `protobuf:"bytes,1,opt,name=db_path,json=dbPath"`
	xxx_hidden_DbBackend       *string                `protobuf:"bytes,2,opt,name=db_backend,json=dbBackend"`
	xxx_hidden_Sqlite3Filename *string                `protobuf:"bytes,3,opt,name=sqlite3_filename,json=sqlite3Filename"`
	xxx_hidden_LogFile         *string                `protobuf:"bytes,4,opt,name=log_file,json=logFile"`
	xxx_hidden_GoogleApiKey    *string                `protobuf:"bytes,5,opt,name=google_api_key,json=googleApiKey"`
	xxx_hidden_OpenaiApiKey    *string                `protobuf:"bytes,6,opt,name=openai_api_key,json=openaiApiKey"`
	xxx_hidden_Logging         *LoggingConfig         `protobuf:"bytes,7,opt,name=logging"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *SubtitleManagerConfig) Reset() {
	*x = SubtitleManagerConfig{}
	mi := &file_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubtitleManagerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubtitleManagerConfig) ProtoMessage() {}

func (x *SubtitleManagerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SubtitleManagerConfig) GetDbPath() string {
	if x != nil {
		if x.xxx_hidden_DbPath != nil {
			return *x.xxx_hidden_DbPath
		}
		return ""
	}
	return ""
}

func (x *SubtitleManagerConfig) GetDbBackend() string {
	if x != nil {
		if x.xxx_hidden_DbBackend != nil {
			return *x.xxx_hidden_DbBackend
		}
		return ""
	}
	return ""
}

func (x *SubtitleManagerConfig) GetSqlite3Filename() string {
	if x != nil {
		if x.xxx_hidden_Sqlite3Filename != nil {
			return *x.xxx_hidden_Sqlite3Filename
		}
		return ""
	}
	return ""
}

// Deprecated: Marked as deprecated in config.proto.
func (x *SubtitleManagerConfig) GetLogFile() string {
	if x != nil {
		if x.xxx_hidden_LogFile != nil {
			return *x.xxx_hidden_LogFile
		}
		return ""
	}
	return ""
}

func (x *SubtitleManagerConfig) GetGoogleApiKey() string {
	if x != nil {
		if x.xxx_hidden_GoogleApiKey != nil {
			return *x.xxx_hidden_GoogleApiKey
		}
		return ""
	}
	return ""
}

func (x *SubtitleManagerConfig) GetOpenaiApiKey() string {
	if x != nil {
		if x.xxx_hidden_OpenaiApiKey != nil {
			return *x.xxx_hidden_OpenaiApiKey
		}
		return ""
	}
	return ""
}

func (x *SubtitleManagerConfig) GetLogging() *LoggingConfig {
	if x != nil {
		return x.xxx_hidden_Logging
	}
	return nil
}

func (x *SubtitleManagerConfig) SetDbPath(v string) {
	x.xxx_hidden_DbPath = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *SubtitleManagerConfig) SetDbBackend(v string) {
	x.xxx_hidden_DbBackend = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *SubtitleManagerConfig) SetSqlite3Filename(v string) {
	x.xxx_hidden_Sqlite3Filename = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

// Deprecated: Marked as deprecated in config.proto.
func (x *SubtitleManagerConfig) SetLogFile(v string) {
	x.xxx_hidden_LogFile = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *SubtitleManagerConfig) SetGoogleApiKey(v string) {
	x.xxx_hidden_GoogleApiKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *SubtitleManagerConfig) SetOpenaiApiKey(v string) {
	x.xxx_hidden_OpenaiApiKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *SubtitleManagerConfig) SetLogging(v *LoggingConfig) {
	x.xxx_hidden_Logging = v
}

func (x *SubtitleManagerConfig) HasDbPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SubtitleManagerConfig) HasDbBackend() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SubtitleManagerConfig) HasSqlite3Filename() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

// Deprecated: Marked as deprecated in config.proto.
func (x *SubtitleManagerConfig) HasLogFile() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SubtitleManagerConfig) HasGoogleApiKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *SubtitleManagerConfig) HasOpenaiApiKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *SubtitleManagerConfig) HasLogging() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Logging != nil
}

func (x *SubtitleManagerConfig) ClearDbPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DbPath = nil
}

func (x *SubtitleManagerConfig) ClearDbBackend() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DbBackend = nil
}

func (x *SubtitleManagerConfig) ClearSqlite3Filename() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Sqlite3Filename = nil
}

// Deprecated: Marked as deprecated in config.proto.
func (x *SubtitleManagerConfig) ClearLogFile() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_LogFile = nil
}

func (x *SubtitleManagerConfig) ClearGoogleApiKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_GoogleApiKey = nil
}

func (x *SubtitleManagerConfig) ClearOpenaiApiKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_OpenaiApiKey = nil
}

func (x *SubtitleManagerConfig) ClearLogging() {
	x.xxx_hidden_Logging = nil
}

type SubtitleManagerConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DbPath          *string
	DbBackend       *string
	Sqlite3Filename *string
	// Legacy string-based log file configuration (deprecated)
	//
	// Deprecated: Marked as deprecated in config.proto.
	LogFile      *string
	GoogleApiKey *string
	OpenaiApiKey *string
	// Enhanced logging configuration using local types
	// TODO: Update to use gcommon types when available
	Logging *LoggingConfig
}

func (b0 SubtitleManagerConfig_builder) Build() *SubtitleManagerConfig {
	m0 := &SubtitleManagerConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DbPath != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_DbPath = b.DbPath
	}
	if b.DbBackend != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_DbBackend = b.DbBackend
	}
	if b.Sqlite3Filename != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Sqlite3Filename = b.Sqlite3Filename
	}
	if b.LogFile != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_LogFile = b.LogFile
	}
	if b.GoogleApiKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_GoogleApiKey = b.GoogleApiKey
	}
	if b.OpenaiApiKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_OpenaiApiKey = b.OpenaiApiKey
	}
	x.xxx_hidden_Logging = b.Logging
	return m0
}

// LoggingConfig defines comprehensive logging settings
type LoggingConfig struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_GlobalLevel       int32                  `protobuf:"varint,1,opt,name=global_level,json=globalLevel"`
	xxx_hidden_PrimaryAppender   AppenderType           `protobuf:"varint,2,opt,name=primary_appender,json=primaryAppender,enum=subtitle.config.v1.AppenderType"`
	xxx_hidden_LogFilePath       *string                `protobuf:"bytes,3,opt,name=log_file_path,json=logFilePath"`
	xxx_hidden_ComponentLevels   map[string]int32       `protobuf:"bytes,4,rep,name=component_levels,json=componentLevels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	xxx_hidden_StructuredLogging bool                   `protobuf:"varint,5,opt,name=structured_logging,json=structuredLogging"`
	xxx_hidden_Rotation          *LogRotationConfig     `protobuf:"bytes,6,opt,name=rotation"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *LoggingConfig) Reset() {
	*x = LoggingConfig{}
	mi := &file_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoggingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingConfig) ProtoMessage() {}

func (x *LoggingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LoggingConfig) GetGlobalLevel() int32 {
	if x != nil {
		return x.xxx_hidden_GlobalLevel
	}
	return 0
}

func (x *LoggingConfig) GetPrimaryAppender() AppenderType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_PrimaryAppender
		}
	}
	return AppenderType_APPENDER_TYPE_UNSPECIFIED
}

func (x *LoggingConfig) GetLogFilePath() string {
	if x != nil {
		if x.xxx_hidden_LogFilePath != nil {
			return *x.xxx_hidden_LogFilePath
		}
		return ""
	}
	return ""
}

func (x *LoggingConfig) GetComponentLevels() map[string]int32 {
	if x != nil {
		return x.xxx_hidden_ComponentLevels
	}
	return nil
}

func (x *LoggingConfig) GetStructuredLogging() bool {
	if x != nil {
		return x.xxx_hidden_StructuredLogging
	}
	return false
}

func (x *LoggingConfig) GetRotation() *LogRotationConfig {
	if x != nil {
		return x.xxx_hidden_Rotation
	}
	return nil
}

func (x *LoggingConfig) SetGlobalLevel(v int32) {
	x.xxx_hidden_GlobalLevel = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *LoggingConfig) SetPrimaryAppender(v AppenderType) {
	x.xxx_hidden_PrimaryAppender = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *LoggingConfig) SetLogFilePath(v string) {
	x.xxx_hidden_LogFilePath = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *LoggingConfig) SetComponentLevels(v map[string]int32) {
	x.xxx_hidden_ComponentLevels = v
}

func (x *LoggingConfig) SetStructuredLogging(v bool) {
	x.xxx_hidden_StructuredLogging = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *LoggingConfig) SetRotation(v *LogRotationConfig) {
	x.xxx_hidden_Rotation = v
}

func (x *LoggingConfig) HasGlobalLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LoggingConfig) HasPrimaryAppender() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LoggingConfig) HasLogFilePath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *LoggingConfig) HasStructuredLogging() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *LoggingConfig) HasRotation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Rotation != nil
}

func (x *LoggingConfig) ClearGlobalLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_GlobalLevel = 0
}

func (x *LoggingConfig) ClearPrimaryAppender() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PrimaryAppender = AppenderType_APPENDER_TYPE_UNSPECIFIED
}

func (x *LoggingConfig) ClearLogFilePath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_LogFilePath = nil
}

func (x *LoggingConfig) ClearStructuredLogging() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_StructuredLogging = false
}

func (x *LoggingConfig) ClearRotation() {
	x.xxx_hidden_Rotation = nil
}

type LoggingConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Global log level (int32 converted to gcommon.LogLevel in Go code)
	GlobalLevel *int32
	// Primary appender type (console, file, etc.)
	PrimaryAppender *AppenderType
	// Log file path (when using file appenders)
	LogFilePath *string
	// Component-specific log levels (int32 converted to gcommon.LogLevel in Go code)
	ComponentLevels map[string]int32
	// Enable structured JSON logging
	StructuredLogging *bool
	// Log rotation settings
	Rotation *LogRotationConfig
}

func (b0 LoggingConfig_builder) Build() *LoggingConfig {
	m0 := &LoggingConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.GlobalLevel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_GlobalLevel = *b.GlobalLevel
	}
	if b.PrimaryAppender != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_PrimaryAppender = *b.PrimaryAppender
	}
	if b.LogFilePath != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_LogFilePath = b.LogFilePath
	}
	x.xxx_hidden_ComponentLevels = b.ComponentLevels
	if b.StructuredLogging != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_StructuredLogging = *b.StructuredLogging
	}
	x.xxx_hidden_Rotation = b.Rotation
	return m0
}

// LogRotationConfig defines log file rotation settings
type LogRotationConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MaxSizeMb   int32                  `protobuf:"varint,1,opt,name=max_size_mb,json=maxSizeMb"`
	xxx_hidden_MaxBackups  int32                  `protobuf:"varint,2,opt,name=max_backups,json=maxBackups"`
	xxx_hidden_MaxAgeDays  int32                  `protobuf:"varint,3,opt,name=max_age_days,json=maxAgeDays"`
	xxx_hidden_Compress    bool                   `protobuf:"varint,4,opt,name=compress"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LogRotationConfig) Reset() {
	*x = LogRotationConfig{}
	mi := &file_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRotationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRotationConfig) ProtoMessage() {}

func (x *LogRotationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogRotationConfig) GetMaxSizeMb() int32 {
	if x != nil {
		return x.xxx_hidden_MaxSizeMb
	}
	return 0
}

func (x *LogRotationConfig) GetMaxBackups() int32 {
	if x != nil {
		return x.xxx_hidden_MaxBackups
	}
	return 0
}

func (x *LogRotationConfig) GetMaxAgeDays() int32 {
	if x != nil {
		return x.xxx_hidden_MaxAgeDays
	}
	return 0
}

func (x *LogRotationConfig) GetCompress() bool {
	if x != nil {
		return x.xxx_hidden_Compress
	}
	return false
}

func (x *LogRotationConfig) SetMaxSizeMb(v int32) {
	x.xxx_hidden_MaxSizeMb = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *LogRotationConfig) SetMaxBackups(v int32) {
	x.xxx_hidden_MaxBackups = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *LogRotationConfig) SetMaxAgeDays(v int32) {
	x.xxx_hidden_MaxAgeDays = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *LogRotationConfig) SetCompress(v bool) {
	x.xxx_hidden_Compress = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *LogRotationConfig) HasMaxSizeMb() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LogRotationConfig) HasMaxBackups() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LogRotationConfig) HasMaxAgeDays() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *LogRotationConfig) HasCompress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *LogRotationConfig) ClearMaxSizeMb() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_MaxSizeMb = 0
}

func (x *LogRotationConfig) ClearMaxBackups() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MaxBackups = 0
}

func (x *LogRotationConfig) ClearMaxAgeDays() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxAgeDays = 0
}

func (x *LogRotationConfig) ClearCompress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Compress = false
}

type LogRotationConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Maximum file size in MB before rotation
	MaxSizeMb *int32
	// Maximum number of backup files to keep
	MaxBackups *int32
	// Maximum age in days for backup files
	MaxAgeDays *int32
	// Compress backup files
	Compress *bool
}

func (b0 LogRotationConfig_builder) Build() *LogRotationConfig {
	m0 := &LogRotationConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MaxSizeMb != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_MaxSizeMb = *b.MaxSizeMb
	}
	if b.MaxBackups != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_MaxBackups = *b.MaxBackups
	}
	if b.MaxAgeDays != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_MaxAgeDays = *b.MaxAgeDays
	}
	if b.Compress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Compress = *b.Compress
	}
	return m0
}

var File_config_proto protoreflect.FileDescriptor

const file_config_proto_rawDesc = "" +
	"\n" +
	"\fconfig.proto\x12\x12subtitle.config.v1\x1a!google/protobuf/go_features.proto\"\xa2\x02\n" +
	"\x15SubtitleManagerConfig\x12\x17\n" +
	"\adb_path\x18\x01 \x01(\tR\x06dbPath\x12\x1d\n" +
	"\n" +
	"db_backend\x18\x02 \x01(\tR\tdbBackend\x12)\n" +
	"\x10sqlite3_filename\x18\x03 \x01(\tR\x0fsqlite3Filename\x12\x1d\n" +
	"\blog_file\x18\x04 \x01(\tB\x02\x18\x01R\alogFile\x12$\n" +
	"\x0egoogle_api_key\x18\x05 \x01(\tR\fgoogleApiKey\x12$\n" +
	"\x0eopenai_api_key\x18\x06 \x01(\tR\fopenaiApiKey\x12;\n" +
	"\alogging\x18\a \x01(\v2!.subtitle.config.v1.LoggingConfigR\alogging\"\xbc\x03\n" +
	"\rLoggingConfig\x12!\n" +
	"\fglobal_level\x18\x01 \x01(\x05R\vglobalLevel\x12K\n" +
	"\x10primary_appender\x18\x02 \x01(\x0e2 .subtitle.config.v1.AppenderTypeR\x0fprimaryAppender\x12\"\n" +
	"\rlog_file_path\x18\x03 \x01(\tR\vlogFilePath\x12a\n" +
	"\x10component_levels\x18\x04 \x03(\v26.subtitle.config.v1.LoggingConfig.ComponentLevelsEntryR\x0fcomponentLevels\x12-\n" +
	"\x12structured_logging\x18\x05 \x01(\bR\x11structuredLogging\x12A\n" +
	"\brotation\x18\x06 \x01(\v2%.subtitle.config.v1.LogRotationConfigR\brotation\x1aB\n" +
	"\x14ComponentLevelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\x92\x01\n" +
	"\x11LogRotationConfig\x12\x1e\n" +
	"\vmax_size_mb\x18\x01 \x01(\x05R\tmaxSizeMb\x12\x1f\n" +
	"\vmax_backups\x18\x02 \x01(\x05R\n" +
	"maxBackups\x12 \n" +
	"\fmax_age_days\x18\x03 \x01(\x05R\n" +
	"maxAgeDays\x12\x1a\n" +
	"\bcompress\x18\x04 \x01(\bR\bcompress*\x95\x01\n" +
	"\fAppenderType\x12\x1d\n" +
	"\x19APPENDER_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15APPENDER_TYPE_CONSOLE\x10\x01\x12\x16\n" +
	"\x12APPENDER_TYPE_FILE\x10\x02\x12\x18\n" +
	"\x14APPENDER_TYPE_SYSLOG\x10\x03\x12\x19\n" +
	"\x15APPENDER_TYPE_NETWORK\x10\x04BBZ8github.com/jdfalk/subtitle-manager/pkg/configpb;configpb\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_config_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_config_proto_goTypes = []any{
	(AppenderType)(0),             // 0: subtitle.config.v1.AppenderType
	(*SubtitleManagerConfig)(nil), // 1: subtitle.config.v1.SubtitleManagerConfig
	(*LoggingConfig)(nil),         // 2: subtitle.config.v1.LoggingConfig
	(*LogRotationConfig)(nil),     // 3: subtitle.config.v1.LogRotationConfig
	nil,                           // 4: subtitle.config.v1.LoggingConfig.ComponentLevelsEntry
}
var file_config_proto_depIdxs = []int32{
	2, // 0: subtitle.config.v1.SubtitleManagerConfig.logging:type_name -> subtitle.config.v1.LoggingConfig
	0, // 1: subtitle.config.v1.LoggingConfig.primary_appender:type_name -> subtitle.config.v1.AppenderType
	4, // 2: subtitle.config.v1.LoggingConfig.component_levels:type_name -> subtitle.config.v1.LoggingConfig.ComponentLevelsEntry
	3, // 3: subtitle.config.v1.LoggingConfig.rotation:type_name -> subtitle.config.v1.LogRotationConfig
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_config_proto_init() }
func file_config_proto_init() {
	if File_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_proto_rawDesc), len(file_config_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_proto_goTypes,
		DependencyIndexes: file_config_proto_depIdxs,
		EnumInfos:         file_config_proto_enumTypes,
		MessageInfos:      file_config_proto_msgTypes,
	}.Build()
	File_config_proto = out.File
	file_config_proto_goTypes = nil
	file_config_proto_depIdxs = nil
}
