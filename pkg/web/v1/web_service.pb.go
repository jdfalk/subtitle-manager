// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: web/v1/web_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Authentication request - Go implementation uses gcommon patterns internally
type AuthenticateUserRequest struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RequestId     *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId"`
	xxx_hidden_Username      *string                `protobuf:"bytes,2,opt,name=username"`
	xxx_hidden_Password      *string                `protobuf:"bytes,3,opt,name=password"`
	xxx_hidden_RememberMe    bool                   `protobuf:"varint,4,opt,name=remember_me,json=rememberMe"`
	xxx_hidden_TwoFactorCode *string                `protobuf:"bytes,5,opt,name=two_factor_code,json=twoFactorCode"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *AuthenticateUserRequest) Reset() {
	*x = AuthenticateUserRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateUserRequest) ProtoMessage() {}

func (x *AuthenticateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthenticateUserRequest) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *AuthenticateUserRequest) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *AuthenticateUserRequest) GetPassword() string {
	if x != nil {
		if x.xxx_hidden_Password != nil {
			return *x.xxx_hidden_Password
		}
		return ""
	}
	return ""
}

func (x *AuthenticateUserRequest) GetRememberMe() bool {
	if x != nil {
		return x.xxx_hidden_RememberMe
	}
	return false
}

func (x *AuthenticateUserRequest) GetTwoFactorCode() string {
	if x != nil {
		if x.xxx_hidden_TwoFactorCode != nil {
			return *x.xxx_hidden_TwoFactorCode
		}
		return ""
	}
	return ""
}

func (x *AuthenticateUserRequest) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *AuthenticateUserRequest) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *AuthenticateUserRequest) SetPassword(v string) {
	x.xxx_hidden_Password = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *AuthenticateUserRequest) SetRememberMe(v bool) {
	x.xxx_hidden_RememberMe = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *AuthenticateUserRequest) SetTwoFactorCode(v string) {
	x.xxx_hidden_TwoFactorCode = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *AuthenticateUserRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AuthenticateUserRequest) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AuthenticateUserRequest) HasPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AuthenticateUserRequest) HasRememberMe() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AuthenticateUserRequest) HasTwoFactorCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AuthenticateUserRequest) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RequestId = nil
}

func (x *AuthenticateUserRequest) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Username = nil
}

func (x *AuthenticateUserRequest) ClearPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Password = nil
}

func (x *AuthenticateUserRequest) ClearRememberMe() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_RememberMe = false
}

func (x *AuthenticateUserRequest) ClearTwoFactorCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_TwoFactorCode = nil
}

type AuthenticateUserRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestId     *string
	Username      *string
	Password      *string
	RememberMe    *bool
	TwoFactorCode *string
}

func (b0 AuthenticateUserRequest_builder) Build() *AuthenticateUserRequest {
	m0 := &AuthenticateUserRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_RequestId = b.RequestId
	}
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Username = b.Username
	}
	if b.Password != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Password = b.Password
	}
	if b.RememberMe != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_RememberMe = *b.RememberMe
	}
	if b.TwoFactorCode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_TwoFactorCode = b.TwoFactorCode
	}
	return m0
}

// Authentication response - Go implementation uses gcommon User/Session internally
type AuthenticateUserResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId    *string                `protobuf:"bytes,1,opt,name=session_id,json=sessionId"`
	xxx_hidden_UserId       *string                `protobuf:"bytes,2,opt,name=user_id,json=userId"`
	xxx_hidden_Success      bool                   `protobuf:"varint,3,opt,name=success"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,4,opt,name=error_message,json=errorMessage"`
	xxx_hidden_ErrorCode    *string                `protobuf:"bytes,5,opt,name=error_code,json=errorCode"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *AuthenticateUserResponse) Reset() {
	*x = AuthenticateUserResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateUserResponse) ProtoMessage() {}

func (x *AuthenticateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthenticateUserResponse) GetSessionId() string {
	if x != nil {
		if x.xxx_hidden_SessionId != nil {
			return *x.xxx_hidden_SessionId
		}
		return ""
	}
	return ""
}

func (x *AuthenticateUserResponse) GetUserId() string {
	if x != nil {
		if x.xxx_hidden_UserId != nil {
			return *x.xxx_hidden_UserId
		}
		return ""
	}
	return ""
}

func (x *AuthenticateUserResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *AuthenticateUserResponse) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *AuthenticateUserResponse) GetErrorCode() string {
	if x != nil {
		if x.xxx_hidden_ErrorCode != nil {
			return *x.xxx_hidden_ErrorCode
		}
		return ""
	}
	return ""
}

func (x *AuthenticateUserResponse) SetSessionId(v string) {
	x.xxx_hidden_SessionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *AuthenticateUserResponse) SetUserId(v string) {
	x.xxx_hidden_UserId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *AuthenticateUserResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *AuthenticateUserResponse) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *AuthenticateUserResponse) SetErrorCode(v string) {
	x.xxx_hidden_ErrorCode = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *AuthenticateUserResponse) HasSessionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AuthenticateUserResponse) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AuthenticateUserResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AuthenticateUserResponse) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AuthenticateUserResponse) HasErrorCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AuthenticateUserResponse) ClearSessionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SessionId = nil
}

func (x *AuthenticateUserResponse) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UserId = nil
}

func (x *AuthenticateUserResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Success = false
}

func (x *AuthenticateUserResponse) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ErrorMessage = nil
}

func (x *AuthenticateUserResponse) ClearErrorCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ErrorCode = nil
}

type AuthenticateUserResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SessionId    *string
	UserId       *string
	Success      *bool
	ErrorMessage *string
	ErrorCode    *string
}

func (b0 AuthenticateUserResponse_builder) Build() *AuthenticateUserResponse {
	m0 := &AuthenticateUserResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SessionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_SessionId = b.SessionId
	}
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_UserId = b.UserId
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	if b.ErrorCode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ErrorCode = b.ErrorCode
	}
	return m0
}

// Logout request
type LogoutUserRequest struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId         *string                `protobuf:"bytes,1,opt,name=session_id,json=sessionId"`
	xxx_hidden_LogoutAllSessions bool                   `protobuf:"varint,2,opt,name=logout_all_sessions,json=logoutAllSessions"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *LogoutUserRequest) Reset() {
	*x = LogoutUserRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutUserRequest) ProtoMessage() {}

func (x *LogoutUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogoutUserRequest) GetSessionId() string {
	if x != nil {
		if x.xxx_hidden_SessionId != nil {
			return *x.xxx_hidden_SessionId
		}
		return ""
	}
	return ""
}

func (x *LogoutUserRequest) GetLogoutAllSessions() bool {
	if x != nil {
		return x.xxx_hidden_LogoutAllSessions
	}
	return false
}

func (x *LogoutUserRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *LogoutUserRequest) SetLogoutAllSessions(v bool) {
	x.xxx_hidden_LogoutAllSessions = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *LogoutUserRequest) HasSessionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LogoutUserRequest) HasLogoutAllSessions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LogoutUserRequest) ClearSessionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SessionId = nil
}

func (x *LogoutUserRequest) ClearLogoutAllSessions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_LogoutAllSessions = false
}

type LogoutUserRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SessionId         *string
	LogoutAllSessions *bool
}

func (b0 LogoutUserRequest_builder) Build() *LogoutUserRequest {
	m0 := &LogoutUserRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SessionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_SessionId = b.SessionId
	}
	if b.LogoutAllSessions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_LogoutAllSessions = *b.LogoutAllSessions
	}
	return m0
}

// Logout response
type LogoutUserResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Success      bool                   `protobuf:"varint,1,opt,name=success"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,2,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *LogoutUserResponse) Reset() {
	*x = LogoutUserResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutUserResponse) ProtoMessage() {}

func (x *LogoutUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LogoutUserResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *LogoutUserResponse) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *LogoutUserResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *LogoutUserResponse) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *LogoutUserResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LogoutUserResponse) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *LogoutUserResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Success = false
}

func (x *LogoutUserResponse) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ErrorMessage = nil
}

type LogoutUserResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Success      *bool
	ErrorMessage *string
}

func (b0 LogoutUserResponse_builder) Build() *LogoutUserResponse {
	m0 := &LogoutUserResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

// Get user request
type GetUserRequest struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RequestId          *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId"`
	xxx_hidden_UserId             *string                `protobuf:"bytes,2,opt,name=user_id,json=userId"`
	xxx_hidden_IncludePreferences bool                   `protobuf:"varint,3,opt,name=include_preferences,json=includePreferences"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetUserRequest) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *GetUserRequest) GetUserId() string {
	if x != nil {
		if x.xxx_hidden_UserId != nil {
			return *x.xxx_hidden_UserId
		}
		return ""
	}
	return ""
}

func (x *GetUserRequest) GetIncludePreferences() bool {
	if x != nil {
		return x.xxx_hidden_IncludePreferences
	}
	return false
}

func (x *GetUserRequest) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *GetUserRequest) SetUserId(v string) {
	x.xxx_hidden_UserId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *GetUserRequest) SetIncludePreferences(v bool) {
	x.xxx_hidden_IncludePreferences = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *GetUserRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetUserRequest) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetUserRequest) HasIncludePreferences() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetUserRequest) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RequestId = nil
}

func (x *GetUserRequest) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UserId = nil
}

func (x *GetUserRequest) ClearIncludePreferences() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_IncludePreferences = false
}

type GetUserRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestId          *string
	UserId             *string
	IncludePreferences *bool
}

func (b0 GetUserRequest_builder) Build() *GetUserRequest {
	m0 := &GetUserRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_RequestId = b.RequestId
	}
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_UserId = b.UserId
	}
	if b.IncludePreferences != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_IncludePreferences = *b.IncludePreferences
	}
	return m0
}

// Get user response - Go implementation populates from gcommon.User
type GetUserResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UserId       *string                `protobuf:"bytes,1,opt,name=user_id,json=userId"`
	xxx_hidden_Username     *string                `protobuf:"bytes,2,opt,name=username"`
	xxx_hidden_Email        *string                `protobuf:"bytes,3,opt,name=email"`
	xxx_hidden_Success      bool                   `protobuf:"varint,4,opt,name=success"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,5,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetUserResponse) GetUserId() string {
	if x != nil {
		if x.xxx_hidden_UserId != nil {
			return *x.xxx_hidden_UserId
		}
		return ""
	}
	return ""
}

func (x *GetUserResponse) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *GetUserResponse) GetEmail() string {
	if x != nil {
		if x.xxx_hidden_Email != nil {
			return *x.xxx_hidden_Email
		}
		return ""
	}
	return ""
}

func (x *GetUserResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *GetUserResponse) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *GetUserResponse) SetUserId(v string) {
	x.xxx_hidden_UserId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *GetUserResponse) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *GetUserResponse) SetEmail(v string) {
	x.xxx_hidden_Email = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *GetUserResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *GetUserResponse) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *GetUserResponse) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetUserResponse) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetUserResponse) HasEmail() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetUserResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetUserResponse) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *GetUserResponse) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UserId = nil
}

func (x *GetUserResponse) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Username = nil
}

func (x *GetUserResponse) ClearEmail() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Email = nil
}

func (x *GetUserResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Success = false
}

func (x *GetUserResponse) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ErrorMessage = nil
}

type GetUserResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	UserId       *string
	Username     *string
	Email        *string
	Success      *bool
	ErrorMessage *string
}

func (b0 GetUserResponse_builder) Build() *GetUserResponse {
	m0 := &GetUserResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_UserId = b.UserId
	}
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Username = b.Username
	}
	if b.Email != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Email = b.Email
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

// Update user request
type UpdateUserRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RequestId   *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId"`
	xxx_hidden_UserId      *string                `protobuf:"bytes,2,opt,name=user_id,json=userId"`
	xxx_hidden_Username    *string                `protobuf:"bytes,3,opt,name=username"`
	xxx_hidden_Email       *string                `protobuf:"bytes,4,opt,name=email"`
	xxx_hidden_Metadata    map[string]string      `protobuf:"bytes,5,rep,name=metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateUserRequest) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *UpdateUserRequest) GetUserId() string {
	if x != nil {
		if x.xxx_hidden_UserId != nil {
			return *x.xxx_hidden_UserId
		}
		return ""
	}
	return ""
}

func (x *UpdateUserRequest) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *UpdateUserRequest) GetEmail() string {
	if x != nil {
		if x.xxx_hidden_Email != nil {
			return *x.xxx_hidden_Email
		}
		return ""
	}
	return ""
}

func (x *UpdateUserRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *UpdateUserRequest) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *UpdateUserRequest) SetUserId(v string) {
	x.xxx_hidden_UserId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *UpdateUserRequest) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *UpdateUserRequest) SetEmail(v string) {
	x.xxx_hidden_Email = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *UpdateUserRequest) SetMetadata(v map[string]string) {
	x.xxx_hidden_Metadata = v
}

func (x *UpdateUserRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateUserRequest) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateUserRequest) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateUserRequest) HasEmail() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateUserRequest) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RequestId = nil
}

func (x *UpdateUserRequest) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UserId = nil
}

func (x *UpdateUserRequest) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Username = nil
}

func (x *UpdateUserRequest) ClearEmail() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Email = nil
}

type UpdateUserRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestId *string
	UserId    *string
	Username  *string
	Email     *string
	Metadata  map[string]string
}

func (b0 UpdateUserRequest_builder) Build() *UpdateUserRequest {
	m0 := &UpdateUserRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_RequestId = b.RequestId
	}
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_UserId = b.UserId
	}
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Username = b.Username
	}
	if b.Email != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Email = b.Email
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Update user response
type UpdateUserResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UserId       *string                `protobuf:"bytes,1,opt,name=user_id,json=userId"`
	xxx_hidden_Username     *string                `protobuf:"bytes,2,opt,name=username"`
	xxx_hidden_Email        *string                `protobuf:"bytes,3,opt,name=email"`
	xxx_hidden_Success      bool                   `protobuf:"varint,4,opt,name=success"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,5,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateUserResponse) GetUserId() string {
	if x != nil {
		if x.xxx_hidden_UserId != nil {
			return *x.xxx_hidden_UserId
		}
		return ""
	}
	return ""
}

func (x *UpdateUserResponse) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *UpdateUserResponse) GetEmail() string {
	if x != nil {
		if x.xxx_hidden_Email != nil {
			return *x.xxx_hidden_Email
		}
		return ""
	}
	return ""
}

func (x *UpdateUserResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *UpdateUserResponse) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *UpdateUserResponse) SetUserId(v string) {
	x.xxx_hidden_UserId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *UpdateUserResponse) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *UpdateUserResponse) SetEmail(v string) {
	x.xxx_hidden_Email = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *UpdateUserResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *UpdateUserResponse) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *UpdateUserResponse) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateUserResponse) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateUserResponse) HasEmail() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateUserResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateUserResponse) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UpdateUserResponse) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UserId = nil
}

func (x *UpdateUserResponse) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Username = nil
}

func (x *UpdateUserResponse) ClearEmail() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Email = nil
}

func (x *UpdateUserResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Success = false
}

func (x *UpdateUserResponse) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ErrorMessage = nil
}

type UpdateUserResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	UserId       *string
	Username     *string
	Email        *string
	Success      *bool
	ErrorMessage *string
}

func (b0 UpdateUserResponse_builder) Build() *UpdateUserResponse {
	m0 := &UpdateUserResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_UserId = b.UserId
	}
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Username = b.Username
	}
	if b.Email != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Email = b.Email
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

// Update user preferences request
type UpdateUserPreferencesRequest struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RequestId      *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId"`
	xxx_hidden_UserId         *string                `protobuf:"bytes,2,opt,name=user_id,json=userId"`
	xxx_hidden_Language       *string                `protobuf:"bytes,3,opt,name=language"`
	xxx_hidden_Theme          *string                `protobuf:"bytes,4,opt,name=theme"`
	xxx_hidden_Timezone       *string                `protobuf:"bytes,5,opt,name=timezone"`
	xxx_hidden_CustomSettings map[string]string      `protobuf:"bytes,6,rep,name=custom_settings,json=customSettings" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *UpdateUserPreferencesRequest) Reset() {
	*x = UpdateUserPreferencesRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserPreferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPreferencesRequest) ProtoMessage() {}

func (x *UpdateUserPreferencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateUserPreferencesRequest) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *UpdateUserPreferencesRequest) GetUserId() string {
	if x != nil {
		if x.xxx_hidden_UserId != nil {
			return *x.xxx_hidden_UserId
		}
		return ""
	}
	return ""
}

func (x *UpdateUserPreferencesRequest) GetLanguage() string {
	if x != nil {
		if x.xxx_hidden_Language != nil {
			return *x.xxx_hidden_Language
		}
		return ""
	}
	return ""
}

func (x *UpdateUserPreferencesRequest) GetTheme() string {
	if x != nil {
		if x.xxx_hidden_Theme != nil {
			return *x.xxx_hidden_Theme
		}
		return ""
	}
	return ""
}

func (x *UpdateUserPreferencesRequest) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *UpdateUserPreferencesRequest) GetCustomSettings() map[string]string {
	if x != nil {
		return x.xxx_hidden_CustomSettings
	}
	return nil
}

func (x *UpdateUserPreferencesRequest) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *UpdateUserPreferencesRequest) SetUserId(v string) {
	x.xxx_hidden_UserId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *UpdateUserPreferencesRequest) SetLanguage(v string) {
	x.xxx_hidden_Language = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *UpdateUserPreferencesRequest) SetTheme(v string) {
	x.xxx_hidden_Theme = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *UpdateUserPreferencesRequest) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *UpdateUserPreferencesRequest) SetCustomSettings(v map[string]string) {
	x.xxx_hidden_CustomSettings = v
}

func (x *UpdateUserPreferencesRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateUserPreferencesRequest) HasUserId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateUserPreferencesRequest) HasLanguage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateUserPreferencesRequest) HasTheme() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UpdateUserPreferencesRequest) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UpdateUserPreferencesRequest) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RequestId = nil
}

func (x *UpdateUserPreferencesRequest) ClearUserId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_UserId = nil
}

func (x *UpdateUserPreferencesRequest) ClearLanguage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Language = nil
}

func (x *UpdateUserPreferencesRequest) ClearTheme() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Theme = nil
}

func (x *UpdateUserPreferencesRequest) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Timezone = nil
}

type UpdateUserPreferencesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestId      *string
	UserId         *string
	Language       *string
	Theme          *string
	Timezone       *string
	CustomSettings map[string]string
}

func (b0 UpdateUserPreferencesRequest_builder) Build() *UpdateUserPreferencesRequest {
	m0 := &UpdateUserPreferencesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_RequestId = b.RequestId
	}
	if b.UserId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_UserId = b.UserId
	}
	if b.Language != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Language = b.Language
	}
	if b.Theme != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Theme = b.Theme
	}
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Timezone = b.Timezone
	}
	x.xxx_hidden_CustomSettings = b.CustomSettings
	return m0
}

// Update user preferences response
type UpdateUserPreferencesResponse struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Language       *string                `protobuf:"bytes,1,opt,name=language"`
	xxx_hidden_Theme          *string                `protobuf:"bytes,2,opt,name=theme"`
	xxx_hidden_Timezone       *string                `protobuf:"bytes,3,opt,name=timezone"`
	xxx_hidden_CustomSettings map[string]string      `protobuf:"bytes,4,rep,name=custom_settings,json=customSettings" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Success        bool                   `protobuf:"varint,5,opt,name=success"`
	xxx_hidden_ErrorMessage   *string                `protobuf:"bytes,6,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *UpdateUserPreferencesResponse) Reset() {
	*x = UpdateUserPreferencesResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserPreferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPreferencesResponse) ProtoMessage() {}

func (x *UpdateUserPreferencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateUserPreferencesResponse) GetLanguage() string {
	if x != nil {
		if x.xxx_hidden_Language != nil {
			return *x.xxx_hidden_Language
		}
		return ""
	}
	return ""
}

func (x *UpdateUserPreferencesResponse) GetTheme() string {
	if x != nil {
		if x.xxx_hidden_Theme != nil {
			return *x.xxx_hidden_Theme
		}
		return ""
	}
	return ""
}

func (x *UpdateUserPreferencesResponse) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *UpdateUserPreferencesResponse) GetCustomSettings() map[string]string {
	if x != nil {
		return x.xxx_hidden_CustomSettings
	}
	return nil
}

func (x *UpdateUserPreferencesResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *UpdateUserPreferencesResponse) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *UpdateUserPreferencesResponse) SetLanguage(v string) {
	x.xxx_hidden_Language = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *UpdateUserPreferencesResponse) SetTheme(v string) {
	x.xxx_hidden_Theme = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *UpdateUserPreferencesResponse) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *UpdateUserPreferencesResponse) SetCustomSettings(v map[string]string) {
	x.xxx_hidden_CustomSettings = v
}

func (x *UpdateUserPreferencesResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *UpdateUserPreferencesResponse) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *UpdateUserPreferencesResponse) HasLanguage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateUserPreferencesResponse) HasTheme() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateUserPreferencesResponse) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateUserPreferencesResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UpdateUserPreferencesResponse) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *UpdateUserPreferencesResponse) ClearLanguage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Language = nil
}

func (x *UpdateUserPreferencesResponse) ClearTheme() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Theme = nil
}

func (x *UpdateUserPreferencesResponse) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Timezone = nil
}

func (x *UpdateUserPreferencesResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Success = false
}

func (x *UpdateUserPreferencesResponse) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ErrorMessage = nil
}

type UpdateUserPreferencesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Language       *string
	Theme          *string
	Timezone       *string
	CustomSettings map[string]string
	Success        *bool
	ErrorMessage   *string
}

func (b0 UpdateUserPreferencesResponse_builder) Build() *UpdateUserPreferencesResponse {
	m0 := &UpdateUserPreferencesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Language != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Language = b.Language
	}
	if b.Theme != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Theme = b.Theme
	}
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Timezone = b.Timezone
	}
	x.xxx_hidden_CustomSettings = b.CustomSettings
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

// Upload subtitle request
type UploadSubtitleRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RequestId   *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId"`
	xxx_hidden_Filename    *string                `protobuf:"bytes,2,opt,name=filename"`
	xxx_hidden_Content     []byte                 `protobuf:"bytes,3,opt,name=content"`
	xxx_hidden_ContentType *string                `protobuf:"bytes,4,opt,name=content_type,json=contentType"`
	xxx_hidden_Metadata    map[string]string      `protobuf:"bytes,5,rep,name=metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UploadSubtitleRequest) Reset() {
	*x = UploadSubtitleRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadSubtitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSubtitleRequest) ProtoMessage() {}

func (x *UploadSubtitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UploadSubtitleRequest) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *UploadSubtitleRequest) GetFilename() string {
	if x != nil {
		if x.xxx_hidden_Filename != nil {
			return *x.xxx_hidden_Filename
		}
		return ""
	}
	return ""
}

func (x *UploadSubtitleRequest) GetContent() []byte {
	if x != nil {
		return x.xxx_hidden_Content
	}
	return nil
}

func (x *UploadSubtitleRequest) GetContentType() string {
	if x != nil {
		if x.xxx_hidden_ContentType != nil {
			return *x.xxx_hidden_ContentType
		}
		return ""
	}
	return ""
}

func (x *UploadSubtitleRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *UploadSubtitleRequest) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *UploadSubtitleRequest) SetFilename(v string) {
	x.xxx_hidden_Filename = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *UploadSubtitleRequest) SetContent(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Content = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *UploadSubtitleRequest) SetContentType(v string) {
	x.xxx_hidden_ContentType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *UploadSubtitleRequest) SetMetadata(v map[string]string) {
	x.xxx_hidden_Metadata = v
}

func (x *UploadSubtitleRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UploadSubtitleRequest) HasFilename() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UploadSubtitleRequest) HasContent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UploadSubtitleRequest) HasContentType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UploadSubtitleRequest) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RequestId = nil
}

func (x *UploadSubtitleRequest) ClearFilename() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Filename = nil
}

func (x *UploadSubtitleRequest) ClearContent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Content = nil
}

func (x *UploadSubtitleRequest) ClearContentType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ContentType = nil
}

type UploadSubtitleRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestId   *string
	Filename    *string
	Content     []byte
	ContentType *string
	Metadata    map[string]string
}

func (b0 UploadSubtitleRequest_builder) Build() *UploadSubtitleRequest {
	m0 := &UploadSubtitleRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_RequestId = b.RequestId
	}
	if b.Filename != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Filename = b.Filename
	}
	if b.Content != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Content = b.Content
	}
	if b.ContentType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_ContentType = b.ContentType
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Upload subtitle response
type UploadSubtitleResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FileId       *string                `protobuf:"bytes,1,opt,name=file_id,json=fileId"`
	xxx_hidden_Filename     *string                `protobuf:"bytes,2,opt,name=filename"`
	xxx_hidden_Size         int64                  `protobuf:"varint,3,opt,name=size"`
	xxx_hidden_Success      bool                   `protobuf:"varint,4,opt,name=success"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,5,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *UploadSubtitleResponse) Reset() {
	*x = UploadSubtitleResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadSubtitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSubtitleResponse) ProtoMessage() {}

func (x *UploadSubtitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UploadSubtitleResponse) GetFileId() string {
	if x != nil {
		if x.xxx_hidden_FileId != nil {
			return *x.xxx_hidden_FileId
		}
		return ""
	}
	return ""
}

func (x *UploadSubtitleResponse) GetFilename() string {
	if x != nil {
		if x.xxx_hidden_Filename != nil {
			return *x.xxx_hidden_Filename
		}
		return ""
	}
	return ""
}

func (x *UploadSubtitleResponse) GetSize() int64 {
	if x != nil {
		return x.xxx_hidden_Size
	}
	return 0
}

func (x *UploadSubtitleResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *UploadSubtitleResponse) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *UploadSubtitleResponse) SetFileId(v string) {
	x.xxx_hidden_FileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *UploadSubtitleResponse) SetFilename(v string) {
	x.xxx_hidden_Filename = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *UploadSubtitleResponse) SetSize(v int64) {
	x.xxx_hidden_Size = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *UploadSubtitleResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *UploadSubtitleResponse) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *UploadSubtitleResponse) HasFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UploadSubtitleResponse) HasFilename() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UploadSubtitleResponse) HasSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UploadSubtitleResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UploadSubtitleResponse) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UploadSubtitleResponse) ClearFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FileId = nil
}

func (x *UploadSubtitleResponse) ClearFilename() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Filename = nil
}

func (x *UploadSubtitleResponse) ClearSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Size = 0
}

func (x *UploadSubtitleResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Success = false
}

func (x *UploadSubtitleResponse) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ErrorMessage = nil
}

type UploadSubtitleResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FileId       *string
	Filename     *string
	Size         *int64
	Success      *bool
	ErrorMessage *string
}

func (b0 UploadSubtitleResponse_builder) Build() *UploadSubtitleResponse {
	m0 := &UploadSubtitleResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_FileId = b.FileId
	}
	if b.Filename != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Filename = b.Filename
	}
	if b.Size != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Size = *b.Size
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

// Download subtitle request
type DownloadSubtitleRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RequestId   *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId"`
	xxx_hidden_FileId      *string                `protobuf:"bytes,2,opt,name=file_id,json=fileId"`
	xxx_hidden_Format      *string                `protobuf:"bytes,3,opt,name=format"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DownloadSubtitleRequest) Reset() {
	*x = DownloadSubtitleRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadSubtitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadSubtitleRequest) ProtoMessage() {}

func (x *DownloadSubtitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DownloadSubtitleRequest) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *DownloadSubtitleRequest) GetFileId() string {
	if x != nil {
		if x.xxx_hidden_FileId != nil {
			return *x.xxx_hidden_FileId
		}
		return ""
	}
	return ""
}

func (x *DownloadSubtitleRequest) GetFormat() string {
	if x != nil {
		if x.xxx_hidden_Format != nil {
			return *x.xxx_hidden_Format
		}
		return ""
	}
	return ""
}

func (x *DownloadSubtitleRequest) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *DownloadSubtitleRequest) SetFileId(v string) {
	x.xxx_hidden_FileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *DownloadSubtitleRequest) SetFormat(v string) {
	x.xxx_hidden_Format = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *DownloadSubtitleRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DownloadSubtitleRequest) HasFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DownloadSubtitleRequest) HasFormat() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DownloadSubtitleRequest) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RequestId = nil
}

func (x *DownloadSubtitleRequest) ClearFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FileId = nil
}

func (x *DownloadSubtitleRequest) ClearFormat() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Format = nil
}

type DownloadSubtitleRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestId *string
	FileId    *string
	Format    *string
}

func (b0 DownloadSubtitleRequest_builder) Build() *DownloadSubtitleRequest {
	m0 := &DownloadSubtitleRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_RequestId = b.RequestId
	}
	if b.FileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_FileId = b.FileId
	}
	if b.Format != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Format = b.Format
	}
	return m0
}

// Download subtitle response
type DownloadSubtitleResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Filename     *string                `protobuf:"bytes,1,opt,name=filename"`
	xxx_hidden_Content      []byte                 `protobuf:"bytes,2,opt,name=content"`
	xxx_hidden_ContentType  *string                `protobuf:"bytes,3,opt,name=content_type,json=contentType"`
	xxx_hidden_Success      bool                   `protobuf:"varint,4,opt,name=success"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,5,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DownloadSubtitleResponse) Reset() {
	*x = DownloadSubtitleResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadSubtitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadSubtitleResponse) ProtoMessage() {}

func (x *DownloadSubtitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DownloadSubtitleResponse) GetFilename() string {
	if x != nil {
		if x.xxx_hidden_Filename != nil {
			return *x.xxx_hidden_Filename
		}
		return ""
	}
	return ""
}

func (x *DownloadSubtitleResponse) GetContent() []byte {
	if x != nil {
		return x.xxx_hidden_Content
	}
	return nil
}

func (x *DownloadSubtitleResponse) GetContentType() string {
	if x != nil {
		if x.xxx_hidden_ContentType != nil {
			return *x.xxx_hidden_ContentType
		}
		return ""
	}
	return ""
}

func (x *DownloadSubtitleResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *DownloadSubtitleResponse) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *DownloadSubtitleResponse) SetFilename(v string) {
	x.xxx_hidden_Filename = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *DownloadSubtitleResponse) SetContent(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Content = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *DownloadSubtitleResponse) SetContentType(v string) {
	x.xxx_hidden_ContentType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *DownloadSubtitleResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *DownloadSubtitleResponse) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *DownloadSubtitleResponse) HasFilename() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DownloadSubtitleResponse) HasContent() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DownloadSubtitleResponse) HasContentType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DownloadSubtitleResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DownloadSubtitleResponse) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DownloadSubtitleResponse) ClearFilename() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Filename = nil
}

func (x *DownloadSubtitleResponse) ClearContent() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Content = nil
}

func (x *DownloadSubtitleResponse) ClearContentType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ContentType = nil
}

func (x *DownloadSubtitleResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Success = false
}

func (x *DownloadSubtitleResponse) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ErrorMessage = nil
}

type DownloadSubtitleResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Filename     *string
	Content      []byte
	ContentType  *string
	Success      *bool
	ErrorMessage *string
}

func (b0 DownloadSubtitleResponse_builder) Build() *DownloadSubtitleResponse {
	m0 := &DownloadSubtitleResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Filename != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Filename = b.Filename
	}
	if b.Content != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Content = b.Content
	}
	if b.ContentType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_ContentType = b.ContentType
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

// Search subtitles request
type SearchSubtitlesRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RequestId   *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId"`
	xxx_hidden_Query       *string                `protobuf:"bytes,2,opt,name=query"`
	xxx_hidden_Language    *string                `protobuf:"bytes,3,opt,name=language"`
	xxx_hidden_Limit       int32                  `protobuf:"varint,4,opt,name=limit"`
	xxx_hidden_Offset      int32                  `protobuf:"varint,5,opt,name=offset"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SearchSubtitlesRequest) Reset() {
	*x = SearchSubtitlesRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchSubtitlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSubtitlesRequest) ProtoMessage() {}

func (x *SearchSubtitlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SearchSubtitlesRequest) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *SearchSubtitlesRequest) GetQuery() string {
	if x != nil {
		if x.xxx_hidden_Query != nil {
			return *x.xxx_hidden_Query
		}
		return ""
	}
	return ""
}

func (x *SearchSubtitlesRequest) GetLanguage() string {
	if x != nil {
		if x.xxx_hidden_Language != nil {
			return *x.xxx_hidden_Language
		}
		return ""
	}
	return ""
}

func (x *SearchSubtitlesRequest) GetLimit() int32 {
	if x != nil {
		return x.xxx_hidden_Limit
	}
	return 0
}

func (x *SearchSubtitlesRequest) GetOffset() int32 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *SearchSubtitlesRequest) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *SearchSubtitlesRequest) SetQuery(v string) {
	x.xxx_hidden_Query = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *SearchSubtitlesRequest) SetLanguage(v string) {
	x.xxx_hidden_Language = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *SearchSubtitlesRequest) SetLimit(v int32) {
	x.xxx_hidden_Limit = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *SearchSubtitlesRequest) SetOffset(v int32) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *SearchSubtitlesRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SearchSubtitlesRequest) HasQuery() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SearchSubtitlesRequest) HasLanguage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SearchSubtitlesRequest) HasLimit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SearchSubtitlesRequest) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *SearchSubtitlesRequest) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RequestId = nil
}

func (x *SearchSubtitlesRequest) ClearQuery() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Query = nil
}

func (x *SearchSubtitlesRequest) ClearLanguage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Language = nil
}

func (x *SearchSubtitlesRequest) ClearLimit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Limit = 0
}

func (x *SearchSubtitlesRequest) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Offset = 0
}

type SearchSubtitlesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestId *string
	Query     *string
	Language  *string
	Limit     *int32
	Offset    *int32
}

func (b0 SearchSubtitlesRequest_builder) Build() *SearchSubtitlesRequest {
	m0 := &SearchSubtitlesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_RequestId = b.RequestId
	}
	if b.Query != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Query = b.Query
	}
	if b.Language != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Language = b.Language
	}
	if b.Limit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Limit = *b.Limit
	}
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Offset = *b.Offset
	}
	return m0
}

// Search subtitles response
type SearchSubtitlesResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FileIds      []string               `protobuf:"bytes,1,rep,name=file_ids,json=fileIds"`
	xxx_hidden_Filenames    []string               `protobuf:"bytes,2,rep,name=filenames"`
	xxx_hidden_TotalCount   int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount"`
	xxx_hidden_Success      bool                   `protobuf:"varint,4,opt,name=success"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,5,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SearchSubtitlesResponse) Reset() {
	*x = SearchSubtitlesResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchSubtitlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSubtitlesResponse) ProtoMessage() {}

func (x *SearchSubtitlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SearchSubtitlesResponse) GetFileIds() []string {
	if x != nil {
		return x.xxx_hidden_FileIds
	}
	return nil
}

func (x *SearchSubtitlesResponse) GetFilenames() []string {
	if x != nil {
		return x.xxx_hidden_Filenames
	}
	return nil
}

func (x *SearchSubtitlesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.xxx_hidden_TotalCount
	}
	return 0
}

func (x *SearchSubtitlesResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *SearchSubtitlesResponse) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *SearchSubtitlesResponse) SetFileIds(v []string) {
	x.xxx_hidden_FileIds = v
}

func (x *SearchSubtitlesResponse) SetFilenames(v []string) {
	x.xxx_hidden_Filenames = v
}

func (x *SearchSubtitlesResponse) SetTotalCount(v int32) {
	x.xxx_hidden_TotalCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *SearchSubtitlesResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *SearchSubtitlesResponse) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *SearchSubtitlesResponse) HasTotalCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SearchSubtitlesResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SearchSubtitlesResponse) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *SearchSubtitlesResponse) ClearTotalCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TotalCount = 0
}

func (x *SearchSubtitlesResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Success = false
}

func (x *SearchSubtitlesResponse) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ErrorMessage = nil
}

type SearchSubtitlesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FileIds      []string
	Filenames    []string
	TotalCount   *int32
	Success      *bool
	ErrorMessage *string
}

func (b0 SearchSubtitlesResponse_builder) Build() *SearchSubtitlesResponse {
	m0 := &SearchSubtitlesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_FileIds = b.FileIds
	x.xxx_hidden_Filenames = b.Filenames
	if b.TotalCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_TotalCount = *b.TotalCount
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

// Translate subtitle request
type TranslateSubtitleRequest struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RequestId      *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId"`
	xxx_hidden_FileId         *string                `protobuf:"bytes,2,opt,name=file_id,json=fileId"`
	xxx_hidden_SourceLanguage *string                `protobuf:"bytes,3,opt,name=source_language,json=sourceLanguage"`
	xxx_hidden_TargetLanguage *string                `protobuf:"bytes,4,opt,name=target_language,json=targetLanguage"`
	xxx_hidden_Options        map[string]string      `protobuf:"bytes,5,rep,name=options" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *TranslateSubtitleRequest) Reset() {
	*x = TranslateSubtitleRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranslateSubtitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateSubtitleRequest) ProtoMessage() {}

func (x *TranslateSubtitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TranslateSubtitleRequest) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *TranslateSubtitleRequest) GetFileId() string {
	if x != nil {
		if x.xxx_hidden_FileId != nil {
			return *x.xxx_hidden_FileId
		}
		return ""
	}
	return ""
}

func (x *TranslateSubtitleRequest) GetSourceLanguage() string {
	if x != nil {
		if x.xxx_hidden_SourceLanguage != nil {
			return *x.xxx_hidden_SourceLanguage
		}
		return ""
	}
	return ""
}

func (x *TranslateSubtitleRequest) GetTargetLanguage() string {
	if x != nil {
		if x.xxx_hidden_TargetLanguage != nil {
			return *x.xxx_hidden_TargetLanguage
		}
		return ""
	}
	return ""
}

func (x *TranslateSubtitleRequest) GetOptions() map[string]string {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *TranslateSubtitleRequest) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *TranslateSubtitleRequest) SetFileId(v string) {
	x.xxx_hidden_FileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *TranslateSubtitleRequest) SetSourceLanguage(v string) {
	x.xxx_hidden_SourceLanguage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *TranslateSubtitleRequest) SetTargetLanguage(v string) {
	x.xxx_hidden_TargetLanguage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *TranslateSubtitleRequest) SetOptions(v map[string]string) {
	x.xxx_hidden_Options = v
}

func (x *TranslateSubtitleRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TranslateSubtitleRequest) HasFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TranslateSubtitleRequest) HasSourceLanguage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TranslateSubtitleRequest) HasTargetLanguage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *TranslateSubtitleRequest) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RequestId = nil
}

func (x *TranslateSubtitleRequest) ClearFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FileId = nil
}

func (x *TranslateSubtitleRequest) ClearSourceLanguage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SourceLanguage = nil
}

func (x *TranslateSubtitleRequest) ClearTargetLanguage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TargetLanguage = nil
}

type TranslateSubtitleRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestId      *string
	FileId         *string
	SourceLanguage *string
	TargetLanguage *string
	Options        map[string]string
}

func (b0 TranslateSubtitleRequest_builder) Build() *TranslateSubtitleRequest {
	m0 := &TranslateSubtitleRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_RequestId = b.RequestId
	}
	if b.FileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_FileId = b.FileId
	}
	if b.SourceLanguage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_SourceLanguage = b.SourceLanguage
	}
	if b.TargetLanguage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_TargetLanguage = b.TargetLanguage
	}
	x.xxx_hidden_Options = b.Options
	return m0
}

// Translate subtitle response
type TranslateSubtitleResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId        *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId"`
	xxx_hidden_Status       *string                `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_ResultFileId *string                `protobuf:"bytes,3,opt,name=result_file_id,json=resultFileId"`
	xxx_hidden_Success      bool                   `protobuf:"varint,4,opt,name=success"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,5,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *TranslateSubtitleResponse) Reset() {
	*x = TranslateSubtitleResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranslateSubtitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateSubtitleResponse) ProtoMessage() {}

func (x *TranslateSubtitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TranslateSubtitleResponse) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *TranslateSubtitleResponse) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *TranslateSubtitleResponse) GetResultFileId() string {
	if x != nil {
		if x.xxx_hidden_ResultFileId != nil {
			return *x.xxx_hidden_ResultFileId
		}
		return ""
	}
	return ""
}

func (x *TranslateSubtitleResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *TranslateSubtitleResponse) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *TranslateSubtitleResponse) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *TranslateSubtitleResponse) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *TranslateSubtitleResponse) SetResultFileId(v string) {
	x.xxx_hidden_ResultFileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *TranslateSubtitleResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *TranslateSubtitleResponse) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *TranslateSubtitleResponse) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TranslateSubtitleResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TranslateSubtitleResponse) HasResultFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TranslateSubtitleResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *TranslateSubtitleResponse) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *TranslateSubtitleResponse) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_JobId = nil
}

func (x *TranslateSubtitleResponse) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Status = nil
}

func (x *TranslateSubtitleResponse) ClearResultFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ResultFileId = nil
}

func (x *TranslateSubtitleResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Success = false
}

func (x *TranslateSubtitleResponse) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ErrorMessage = nil
}

type TranslateSubtitleResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId        *string
	Status       *string
	ResultFileId *string
	Success      *bool
	ErrorMessage *string
}

func (b0 TranslateSubtitleResponse_builder) Build() *TranslateSubtitleResponse {
	m0 := &TranslateSubtitleResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_JobId = b.JobId
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Status = b.Status
	}
	if b.ResultFileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_ResultFileId = b.ResultFileId
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

// Get translation status request
type GetTranslationStatusRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RequestId   *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId"`
	xxx_hidden_JobId       *string                `protobuf:"bytes,2,opt,name=job_id,json=jobId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetTranslationStatusRequest) Reset() {
	*x = GetTranslationStatusRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranslationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranslationStatusRequest) ProtoMessage() {}

func (x *GetTranslationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetTranslationStatusRequest) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *GetTranslationStatusRequest) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *GetTranslationStatusRequest) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetTranslationStatusRequest) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetTranslationStatusRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetTranslationStatusRequest) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetTranslationStatusRequest) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RequestId = nil
}

func (x *GetTranslationStatusRequest) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_JobId = nil
}

type GetTranslationStatusRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestId *string
	JobId     *string
}

func (b0 GetTranslationStatusRequest_builder) Build() *GetTranslationStatusRequest {
	m0 := &GetTranslationStatusRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_RequestId = b.RequestId
	}
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_JobId = b.JobId
	}
	return m0
}

// Get translation status response
type GetTranslationStatusResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId        *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId"`
	xxx_hidden_Status       *string                `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_Progress     float32                `protobuf:"fixed32,3,opt,name=progress"`
	xxx_hidden_ResultFileId *string                `protobuf:"bytes,4,opt,name=result_file_id,json=resultFileId"`
	xxx_hidden_Success      bool                   `protobuf:"varint,5,opt,name=success"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,6,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetTranslationStatusResponse) Reset() {
	*x = GetTranslationStatusResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranslationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranslationStatusResponse) ProtoMessage() {}

func (x *GetTranslationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetTranslationStatusResponse) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *GetTranslationStatusResponse) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *GetTranslationStatusResponse) GetProgress() float32 {
	if x != nil {
		return x.xxx_hidden_Progress
	}
	return 0
}

func (x *GetTranslationStatusResponse) GetResultFileId() string {
	if x != nil {
		if x.xxx_hidden_ResultFileId != nil {
			return *x.xxx_hidden_ResultFileId
		}
		return ""
	}
	return ""
}

func (x *GetTranslationStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *GetTranslationStatusResponse) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *GetTranslationStatusResponse) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *GetTranslationStatusResponse) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *GetTranslationStatusResponse) SetProgress(v float32) {
	x.xxx_hidden_Progress = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *GetTranslationStatusResponse) SetResultFileId(v string) {
	x.xxx_hidden_ResultFileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *GetTranslationStatusResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *GetTranslationStatusResponse) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *GetTranslationStatusResponse) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetTranslationStatusResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetTranslationStatusResponse) HasProgress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetTranslationStatusResponse) HasResultFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetTranslationStatusResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *GetTranslationStatusResponse) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *GetTranslationStatusResponse) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_JobId = nil
}

func (x *GetTranslationStatusResponse) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Status = nil
}

func (x *GetTranslationStatusResponse) ClearProgress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Progress = 0
}

func (x *GetTranslationStatusResponse) ClearResultFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ResultFileId = nil
}

func (x *GetTranslationStatusResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Success = false
}

func (x *GetTranslationStatusResponse) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ErrorMessage = nil
}

type GetTranslationStatusResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId        *string
	Status       *string
	Progress     *float32
	ResultFileId *string
	Success      *bool
	ErrorMessage *string
}

func (b0 GetTranslationStatusResponse_builder) Build() *GetTranslationStatusResponse {
	m0 := &GetTranslationStatusResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_JobId = b.JobId
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Status = b.Status
	}
	if b.Progress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Progress = *b.Progress
	}
	if b.ResultFileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_ResultFileId = b.ResultFileId
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

// Cancel translation request
type CancelTranslationRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RequestId   *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId"`
	xxx_hidden_JobId       *string                `protobuf:"bytes,2,opt,name=job_id,json=jobId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CancelTranslationRequest) Reset() {
	*x = CancelTranslationRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTranslationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTranslationRequest) ProtoMessage() {}

func (x *CancelTranslationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CancelTranslationRequest) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *CancelTranslationRequest) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *CancelTranslationRequest) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *CancelTranslationRequest) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *CancelTranslationRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CancelTranslationRequest) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CancelTranslationRequest) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RequestId = nil
}

func (x *CancelTranslationRequest) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_JobId = nil
}

type CancelTranslationRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestId *string
	JobId     *string
}

func (b0 CancelTranslationRequest_builder) Build() *CancelTranslationRequest {
	m0 := &CancelTranslationRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_RequestId = b.RequestId
	}
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_JobId = b.JobId
	}
	return m0
}

// Cancel translation response
type CancelTranslationResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId        *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId"`
	xxx_hidden_Cancelled    bool                   `protobuf:"varint,2,opt,name=cancelled"`
	xxx_hidden_Success      bool                   `protobuf:"varint,3,opt,name=success"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,4,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CancelTranslationResponse) Reset() {
	*x = CancelTranslationResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTranslationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTranslationResponse) ProtoMessage() {}

func (x *CancelTranslationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CancelTranslationResponse) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *CancelTranslationResponse) GetCancelled() bool {
	if x != nil {
		return x.xxx_hidden_Cancelled
	}
	return false
}

func (x *CancelTranslationResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *CancelTranslationResponse) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *CancelTranslationResponse) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *CancelTranslationResponse) SetCancelled(v bool) {
	x.xxx_hidden_Cancelled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CancelTranslationResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *CancelTranslationResponse) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *CancelTranslationResponse) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CancelTranslationResponse) HasCancelled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CancelTranslationResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CancelTranslationResponse) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CancelTranslationResponse) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_JobId = nil
}

func (x *CancelTranslationResponse) ClearCancelled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Cancelled = false
}

func (x *CancelTranslationResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Success = false
}

func (x *CancelTranslationResponse) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ErrorMessage = nil
}

type CancelTranslationResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId        *string
	Cancelled    *bool
	Success      *bool
	ErrorMessage *string
}

func (b0 CancelTranslationResponse_builder) Build() *CancelTranslationResponse {
	m0 := &CancelTranslationResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_JobId = b.JobId
	}
	if b.Cancelled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Cancelled = *b.Cancelled
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

// Upload file request (streaming)
type UploadFileRequest struct {
	state           protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Data isUploadFileRequest_Data `protobuf_oneof:"data"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UploadFileRequest) GetMetadata() *UploadFileRequest_FileMetadata {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*uploadFileRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *UploadFileRequest) GetChunk() []byte {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*uploadFileRequest_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

func (x *UploadFileRequest) SetMetadata(v *UploadFileRequest_FileMetadata) {
	if v == nil {
		x.xxx_hidden_Data = nil
		return
	}
	x.xxx_hidden_Data = &uploadFileRequest_Metadata{v}
}

func (x *UploadFileRequest) SetChunk(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data = &uploadFileRequest_Chunk{v}
}

func (x *UploadFileRequest) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *UploadFileRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*uploadFileRequest_Metadata)
	return ok
}

func (x *UploadFileRequest) HasChunk() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*uploadFileRequest_Chunk)
	return ok
}

func (x *UploadFileRequest) ClearData() {
	x.xxx_hidden_Data = nil
}

func (x *UploadFileRequest) ClearMetadata() {
	if _, ok := x.xxx_hidden_Data.(*uploadFileRequest_Metadata); ok {
		x.xxx_hidden_Data = nil
	}
}

func (x *UploadFileRequest) ClearChunk() {
	if _, ok := x.xxx_hidden_Data.(*uploadFileRequest_Chunk); ok {
		x.xxx_hidden_Data = nil
	}
}

const UploadFileRequest_Data_not_set_case case_UploadFileRequest_Data = 0
const UploadFileRequest_Metadata_case case_UploadFileRequest_Data = 1
const UploadFileRequest_Chunk_case case_UploadFileRequest_Data = 2

func (x *UploadFileRequest) WhichData() case_UploadFileRequest_Data {
	if x == nil {
		return UploadFileRequest_Data_not_set_case
	}
	switch x.xxx_hidden_Data.(type) {
	case *uploadFileRequest_Metadata:
		return UploadFileRequest_Metadata_case
	case *uploadFileRequest_Chunk:
		return UploadFileRequest_Chunk_case
	default:
		return UploadFileRequest_Data_not_set_case
	}
}

type UploadFileRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Data:
	Metadata *UploadFileRequest_FileMetadata
	Chunk    []byte
	// -- end of xxx_hidden_Data
}

func (b0 UploadFileRequest_builder) Build() *UploadFileRequest {
	m0 := &UploadFileRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Metadata != nil {
		x.xxx_hidden_Data = &uploadFileRequest_Metadata{b.Metadata}
	}
	if b.Chunk != nil {
		x.xxx_hidden_Data = &uploadFileRequest_Chunk{b.Chunk}
	}
	return m0
}

type case_UploadFileRequest_Data protoreflect.FieldNumber

func (x case_UploadFileRequest_Data) String() string {
	md := file_web_v1_web_service_proto_msgTypes[22].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isUploadFileRequest_Data interface {
	isUploadFileRequest_Data()
}

type uploadFileRequest_Metadata struct {
	Metadata *UploadFileRequest_FileMetadata `protobuf:"bytes,1,opt,name=metadata,oneof"`
}

type uploadFileRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,oneof"`
}

func (*uploadFileRequest_Metadata) isUploadFileRequest_Data() {}

func (*uploadFileRequest_Chunk) isUploadFileRequest_Data() {}

// Upload file response
type UploadFileResponse struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FileId       *string                `protobuf:"bytes,1,opt,name=file_id,json=fileId"`
	xxx_hidden_Filename     *string                `protobuf:"bytes,2,opt,name=filename"`
	xxx_hidden_Size         int64                  `protobuf:"varint,3,opt,name=size"`
	xxx_hidden_Success      bool                   `protobuf:"varint,4,opt,name=success"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,5,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *UploadFileResponse) Reset() {
	*x = UploadFileResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResponse) ProtoMessage() {}

func (x *UploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UploadFileResponse) GetFileId() string {
	if x != nil {
		if x.xxx_hidden_FileId != nil {
			return *x.xxx_hidden_FileId
		}
		return ""
	}
	return ""
}

func (x *UploadFileResponse) GetFilename() string {
	if x != nil {
		if x.xxx_hidden_Filename != nil {
			return *x.xxx_hidden_Filename
		}
		return ""
	}
	return ""
}

func (x *UploadFileResponse) GetSize() int64 {
	if x != nil {
		return x.xxx_hidden_Size
	}
	return 0
}

func (x *UploadFileResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *UploadFileResponse) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *UploadFileResponse) SetFileId(v string) {
	x.xxx_hidden_FileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *UploadFileResponse) SetFilename(v string) {
	x.xxx_hidden_Filename = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *UploadFileResponse) SetSize(v int64) {
	x.xxx_hidden_Size = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *UploadFileResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *UploadFileResponse) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *UploadFileResponse) HasFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UploadFileResponse) HasFilename() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UploadFileResponse) HasSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UploadFileResponse) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *UploadFileResponse) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *UploadFileResponse) ClearFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FileId = nil
}

func (x *UploadFileResponse) ClearFilename() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Filename = nil
}

func (x *UploadFileResponse) ClearSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Size = 0
}

func (x *UploadFileResponse) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Success = false
}

func (x *UploadFileResponse) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ErrorMessage = nil
}

type UploadFileResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FileId       *string
	Filename     *string
	Size         *int64
	Success      *bool
	ErrorMessage *string
}

func (b0 UploadFileResponse_builder) Build() *UploadFileResponse {
	m0 := &UploadFileResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_FileId = b.FileId
	}
	if b.Filename != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Filename = b.Filename
	}
	if b.Size != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Size = *b.Size
	}
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

// Download file request
type DownloadFileRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RequestId   *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId"`
	xxx_hidden_FileId      *string                `protobuf:"bytes,2,opt,name=file_id,json=fileId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DownloadFileRequest) Reset() {
	*x = DownloadFileRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRequest) ProtoMessage() {}

func (x *DownloadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DownloadFileRequest) GetRequestId() string {
	if x != nil {
		if x.xxx_hidden_RequestId != nil {
			return *x.xxx_hidden_RequestId
		}
		return ""
	}
	return ""
}

func (x *DownloadFileRequest) GetFileId() string {
	if x != nil {
		if x.xxx_hidden_FileId != nil {
			return *x.xxx_hidden_FileId
		}
		return ""
	}
	return ""
}

func (x *DownloadFileRequest) SetRequestId(v string) {
	x.xxx_hidden_RequestId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DownloadFileRequest) SetFileId(v string) {
	x.xxx_hidden_FileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DownloadFileRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DownloadFileRequest) HasFileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DownloadFileRequest) ClearRequestId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RequestId = nil
}

func (x *DownloadFileRequest) ClearFileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FileId = nil
}

type DownloadFileRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestId *string
	FileId    *string
}

func (b0 DownloadFileRequest_builder) Build() *DownloadFileRequest {
	m0 := &DownloadFileRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_RequestId = b.RequestId
	}
	if b.FileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_FileId = b.FileId
	}
	return m0
}

// Download file response (streaming)
type DownloadFileResponse struct {
	state           protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Data isDownloadFileResponse_Data `protobuf_oneof:"data"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DownloadFileResponse) Reset() {
	*x = DownloadFileResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileResponse) ProtoMessage() {}

func (x *DownloadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DownloadFileResponse) GetMetadata() *DownloadFileResponse_FileMetadata {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*downloadFileResponse_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *DownloadFileResponse) GetChunk() []byte {
	if x != nil {
		if x, ok := x.xxx_hidden_Data.(*downloadFileResponse_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

func (x *DownloadFileResponse) SetMetadata(v *DownloadFileResponse_FileMetadata) {
	if v == nil {
		x.xxx_hidden_Data = nil
		return
	}
	x.xxx_hidden_Data = &downloadFileResponse_Metadata{v}
}

func (x *DownloadFileResponse) SetChunk(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data = &downloadFileResponse_Chunk{v}
}

func (x *DownloadFileResponse) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *DownloadFileResponse) HasMetadata() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*downloadFileResponse_Metadata)
	return ok
}

func (x *DownloadFileResponse) HasChunk() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Data.(*downloadFileResponse_Chunk)
	return ok
}

func (x *DownloadFileResponse) ClearData() {
	x.xxx_hidden_Data = nil
}

func (x *DownloadFileResponse) ClearMetadata() {
	if _, ok := x.xxx_hidden_Data.(*downloadFileResponse_Metadata); ok {
		x.xxx_hidden_Data = nil
	}
}

func (x *DownloadFileResponse) ClearChunk() {
	if _, ok := x.xxx_hidden_Data.(*downloadFileResponse_Chunk); ok {
		x.xxx_hidden_Data = nil
	}
}

const DownloadFileResponse_Data_not_set_case case_DownloadFileResponse_Data = 0
const DownloadFileResponse_Metadata_case case_DownloadFileResponse_Data = 1
const DownloadFileResponse_Chunk_case case_DownloadFileResponse_Data = 2

func (x *DownloadFileResponse) WhichData() case_DownloadFileResponse_Data {
	if x == nil {
		return DownloadFileResponse_Data_not_set_case
	}
	switch x.xxx_hidden_Data.(type) {
	case *downloadFileResponse_Metadata:
		return DownloadFileResponse_Metadata_case
	case *downloadFileResponse_Chunk:
		return DownloadFileResponse_Chunk_case
	default:
		return DownloadFileResponse_Data_not_set_case
	}
}

type DownloadFileResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Data:
	Metadata *DownloadFileResponse_FileMetadata
	Chunk    []byte
	// -- end of xxx_hidden_Data
}

func (b0 DownloadFileResponse_builder) Build() *DownloadFileResponse {
	m0 := &DownloadFileResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Metadata != nil {
		x.xxx_hidden_Data = &downloadFileResponse_Metadata{b.Metadata}
	}
	if b.Chunk != nil {
		x.xxx_hidden_Data = &downloadFileResponse_Chunk{b.Chunk}
	}
	return m0
}

type case_DownloadFileResponse_Data protoreflect.FieldNumber

func (x case_DownloadFileResponse_Data) String() string {
	md := file_web_v1_web_service_proto_msgTypes[25].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isDownloadFileResponse_Data interface {
	isDownloadFileResponse_Data()
}

type downloadFileResponse_Metadata struct {
	Metadata *DownloadFileResponse_FileMetadata `protobuf:"bytes,1,opt,name=metadata,oneof"`
}

type downloadFileResponse_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,oneof"`
}

func (*downloadFileResponse_Metadata) isDownloadFileResponse_Data() {}

func (*downloadFileResponse_Chunk) isDownloadFileResponse_Data() {}

// Health check request
type HealthCheckRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Service     *string                `protobuf:"bytes,1,opt,name=service"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_web_v1_web_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		if x.xxx_hidden_Service != nil {
			return *x.xxx_hidden_Service
		}
		return ""
	}
	return ""
}

func (x *HealthCheckRequest) SetService(v string) {
	x.xxx_hidden_Service = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *HealthCheckRequest) HasService() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *HealthCheckRequest) ClearService() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Service = nil
}

type HealthCheckRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Service *string
}

func (b0 HealthCheckRequest_builder) Build() *HealthCheckRequest {
	m0 := &HealthCheckRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Service != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Service = b.Service
	}
	return m0
}

// Health check response - Go implementation uses gcommon health types internally
type HealthCheckResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Status      *string                `protobuf:"bytes,1,opt,name=status"`
	xxx_hidden_Service     *string                `protobuf:"bytes,2,opt,name=service"`
	xxx_hidden_Message     *string                `protobuf:"bytes,3,opt,name=message"`
	xxx_hidden_Timestamp   int64                  `protobuf:"varint,4,opt,name=timestamp"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_web_v1_web_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *HealthCheckResponse) GetService() string {
	if x != nil {
		if x.xxx_hidden_Service != nil {
			return *x.xxx_hidden_Service
		}
		return ""
	}
	return ""
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() int64 {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return 0
}

func (x *HealthCheckResponse) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *HealthCheckResponse) SetService(v string) {
	x.xxx_hidden_Service = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *HealthCheckResponse) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *HealthCheckResponse) SetTimestamp(v int64) {
	x.xxx_hidden_Timestamp = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *HealthCheckResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *HealthCheckResponse) HasService() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *HealthCheckResponse) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *HealthCheckResponse) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *HealthCheckResponse) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Status = nil
}

func (x *HealthCheckResponse) ClearService() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Service = nil
}

func (x *HealthCheckResponse) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Message = nil
}

func (x *HealthCheckResponse) ClearTimestamp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Timestamp = 0
}

type HealthCheckResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status    *string
	Service   *string
	Message   *string
	Timestamp *int64
}

func (b0 HealthCheckResponse_builder) Build() *HealthCheckResponse {
	m0 := &HealthCheckResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Status = b.Status
	}
	if b.Service != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Service = b.Service
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Message = b.Message
	}
	if b.Timestamp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Timestamp = *b.Timestamp
	}
	return m0
}

type UploadFileRequest_FileMetadata struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Filename    *string                `protobuf:"bytes,1,opt,name=filename"`
	xxx_hidden_ContentType *string                `protobuf:"bytes,2,opt,name=content_type,json=contentType"`
	xxx_hidden_TotalSize   int64                  `protobuf:"varint,3,opt,name=total_size,json=totalSize"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UploadFileRequest_FileMetadata) Reset() {
	*x = UploadFileRequest_FileMetadata{}
	mi := &file_web_v1_web_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileRequest_FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest_FileMetadata) ProtoMessage() {}

func (x *UploadFileRequest_FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UploadFileRequest_FileMetadata) GetFilename() string {
	if x != nil {
		if x.xxx_hidden_Filename != nil {
			return *x.xxx_hidden_Filename
		}
		return ""
	}
	return ""
}

func (x *UploadFileRequest_FileMetadata) GetContentType() string {
	if x != nil {
		if x.xxx_hidden_ContentType != nil {
			return *x.xxx_hidden_ContentType
		}
		return ""
	}
	return ""
}

func (x *UploadFileRequest_FileMetadata) GetTotalSize() int64 {
	if x != nil {
		return x.xxx_hidden_TotalSize
	}
	return 0
}

func (x *UploadFileRequest_FileMetadata) SetFilename(v string) {
	x.xxx_hidden_Filename = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *UploadFileRequest_FileMetadata) SetContentType(v string) {
	x.xxx_hidden_ContentType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *UploadFileRequest_FileMetadata) SetTotalSize(v int64) {
	x.xxx_hidden_TotalSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *UploadFileRequest_FileMetadata) HasFilename() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UploadFileRequest_FileMetadata) HasContentType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UploadFileRequest_FileMetadata) HasTotalSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UploadFileRequest_FileMetadata) ClearFilename() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Filename = nil
}

func (x *UploadFileRequest_FileMetadata) ClearContentType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ContentType = nil
}

func (x *UploadFileRequest_FileMetadata) ClearTotalSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TotalSize = 0
}

type UploadFileRequest_FileMetadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Filename    *string
	ContentType *string
	TotalSize   *int64
}

func (b0 UploadFileRequest_FileMetadata_builder) Build() *UploadFileRequest_FileMetadata {
	m0 := &UploadFileRequest_FileMetadata{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Filename != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Filename = b.Filename
	}
	if b.ContentType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ContentType = b.ContentType
	}
	if b.TotalSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_TotalSize = *b.TotalSize
	}
	return m0
}

type DownloadFileResponse_FileMetadata struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Filename    *string                `protobuf:"bytes,1,opt,name=filename"`
	xxx_hidden_ContentType *string                `protobuf:"bytes,2,opt,name=content_type,json=contentType"`
	xxx_hidden_TotalSize   int64                  `protobuf:"varint,3,opt,name=total_size,json=totalSize"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DownloadFileResponse_FileMetadata) Reset() {
	*x = DownloadFileResponse_FileMetadata{}
	mi := &file_web_v1_web_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileResponse_FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileResponse_FileMetadata) ProtoMessage() {}

func (x *DownloadFileResponse_FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_web_v1_web_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DownloadFileResponse_FileMetadata) GetFilename() string {
	if x != nil {
		if x.xxx_hidden_Filename != nil {
			return *x.xxx_hidden_Filename
		}
		return ""
	}
	return ""
}

func (x *DownloadFileResponse_FileMetadata) GetContentType() string {
	if x != nil {
		if x.xxx_hidden_ContentType != nil {
			return *x.xxx_hidden_ContentType
		}
		return ""
	}
	return ""
}

func (x *DownloadFileResponse_FileMetadata) GetTotalSize() int64 {
	if x != nil {
		return x.xxx_hidden_TotalSize
	}
	return 0
}

func (x *DownloadFileResponse_FileMetadata) SetFilename(v string) {
	x.xxx_hidden_Filename = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *DownloadFileResponse_FileMetadata) SetContentType(v string) {
	x.xxx_hidden_ContentType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *DownloadFileResponse_FileMetadata) SetTotalSize(v int64) {
	x.xxx_hidden_TotalSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *DownloadFileResponse_FileMetadata) HasFilename() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DownloadFileResponse_FileMetadata) HasContentType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DownloadFileResponse_FileMetadata) HasTotalSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DownloadFileResponse_FileMetadata) ClearFilename() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Filename = nil
}

func (x *DownloadFileResponse_FileMetadata) ClearContentType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ContentType = nil
}

func (x *DownloadFileResponse_FileMetadata) ClearTotalSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TotalSize = 0
}

type DownloadFileResponse_FileMetadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Filename    *string
	ContentType *string
	TotalSize   *int64
}

func (b0 DownloadFileResponse_FileMetadata_builder) Build() *DownloadFileResponse_FileMetadata {
	m0 := &DownloadFileResponse_FileMetadata{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Filename != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Filename = b.Filename
	}
	if b.ContentType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ContentType = b.ContentType
	}
	if b.TotalSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_TotalSize = *b.TotalSize
	}
	return m0
}

var File_web_v1_web_service_proto protoreflect.FileDescriptor

const file_web_v1_web_service_proto_rawDesc = "" +
	"\n" +
	"\x18web/v1/web_service.proto\x12\x17subtitle_manager.web.v1\x1a!google/protobuf/go_features.proto\"\xb9\x01\n" +
	"\x17AuthenticateUserRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x1f\n" +
	"\vremember_me\x18\x04 \x01(\bR\n" +
	"rememberMe\x12&\n" +
	"\x0ftwo_factor_code\x18\x05 \x01(\tR\rtwoFactorCode\"\xb0\x01\n" +
	"\x18AuthenticateUserResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12\x1d\n" +
	"\n" +
	"error_code\x18\x05 \x01(\tR\terrorCode\"b\n" +
	"\x11LogoutUserRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12.\n" +
	"\x13logout_all_sessions\x18\x02 \x01(\bR\x11logoutAllSessions\"S\n" +
	"\x12LogoutUserResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"y\n" +
	"\x0eGetUserRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12/\n" +
	"\x13include_preferences\x18\x03 \x01(\bR\x12includePreferences\"\x9b\x01\n" +
	"\x0fGetUserResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"\x90\x02\n" +
	"\x11UpdateUserRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x04 \x01(\tR\x05email\x12T\n" +
	"\bmetadata\x18\x05 \x03(\v28.subtitle_manager.web.v1.UpdateUserRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9e\x01\n" +
	"\x12UpdateUserResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"\xdb\x02\n" +
	"\x1cUpdateUserPreferencesRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1a\n" +
	"\blanguage\x18\x03 \x01(\tR\blanguage\x12\x14\n" +
	"\x05theme\x18\x04 \x01(\tR\x05theme\x12\x1a\n" +
	"\btimezone\x18\x05 \x01(\tR\btimezone\x12r\n" +
	"\x0fcustom_settings\x18\x06 \x03(\v2I.subtitle_manager.web.v1.UpdateUserPreferencesRequest.CustomSettingsEntryR\x0ecustomSettings\x1aA\n" +
	"\x13CustomSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe4\x02\n" +
	"\x1dUpdateUserPreferencesResponse\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12\x14\n" +
	"\x05theme\x18\x02 \x01(\tR\x05theme\x12\x1a\n" +
	"\btimezone\x18\x03 \x01(\tR\btimezone\x12s\n" +
	"\x0fcustom_settings\x18\x04 \x03(\v2J.subtitle_manager.web.v1.UpdateUserPreferencesResponse.CustomSettingsEntryR\x0ecustomSettings\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\x1aA\n" +
	"\x13CustomSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa6\x02\n" +
	"\x15UploadSubtitleRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x18\n" +
	"\acontent\x18\x03 \x01(\fR\acontent\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12X\n" +
	"\bmetadata\x18\x05 \x03(\v2<.subtitle_manager.web.v1.UploadSubtitleRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa0\x01\n" +
	"\x16UploadSubtitleResponse\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"i\n" +
	"\x17DownloadSubtitleRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x17\n" +
	"\afile_id\x18\x02 \x01(\tR\x06fileId\x12\x16\n" +
	"\x06format\x18\x03 \x01(\tR\x06format\"\xb2\x01\n" +
	"\x18DownloadSubtitleResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"\x97\x01\n" +
	"\x16SearchSubtitlesRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x1a\n" +
	"\blanguage\x18\x03 \x01(\tR\blanguage\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offset\"\xb2\x01\n" +
	"\x17SearchSubtitlesResponse\x12\x19\n" +
	"\bfile_ids\x18\x01 \x03(\tR\afileIds\x12\x1c\n" +
	"\tfilenames\x18\x02 \x03(\tR\tfilenames\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"\xba\x02\n" +
	"\x18TranslateSubtitleRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x17\n" +
	"\afile_id\x18\x02 \x01(\tR\x06fileId\x12'\n" +
	"\x0fsource_language\x18\x03 \x01(\tR\x0esourceLanguage\x12'\n" +
	"\x0ftarget_language\x18\x04 \x01(\tR\x0etargetLanguage\x12X\n" +
	"\aoptions\x18\x05 \x03(\v2>.subtitle_manager.web.v1.TranslateSubtitleRequest.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaf\x01\n" +
	"\x19TranslateSubtitleResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12$\n" +
	"\x0eresult_file_id\x18\x03 \x01(\tR\fresultFileId\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"S\n" +
	"\x1bGetTranslationStatusRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\"\xce\x01\n" +
	"\x1cGetTranslationStatusResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1a\n" +
	"\bprogress\x18\x03 \x01(\x02R\bprogress\x12$\n" +
	"\x0eresult_file_id\x18\x04 \x01(\tR\fresultFileId\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\"P\n" +
	"\x18CancelTranslationRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\"\x8f\x01\n" +
	"\x19CancelTranslationResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x1c\n" +
	"\tcancelled\x18\x02 \x01(\bR\tcancelled\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"\xf8\x01\n" +
	"\x11UploadFileRequest\x12U\n" +
	"\bmetadata\x18\x01 \x01(\v27.subtitle_manager.web.v1.UploadFileRequest.FileMetadataH\x00R\bmetadata\x12\x16\n" +
	"\x05chunk\x18\x02 \x01(\fH\x00R\x05chunk\x1al\n" +
	"\fFileMetadata\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x03R\ttotalSizeB\x06\n" +
	"\x04data\"\x9c\x01\n" +
	"\x12UploadFileResponse\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"M\n" +
	"\x13DownloadFileRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x17\n" +
	"\afile_id\x18\x02 \x01(\tR\x06fileId\"\xfe\x01\n" +
	"\x14DownloadFileResponse\x12X\n" +
	"\bmetadata\x18\x01 \x01(\v2:.subtitle_manager.web.v1.DownloadFileResponse.FileMetadataH\x00R\bmetadata\x12\x16\n" +
	"\x05chunk\x18\x02 \x01(\fH\x00R\x05chunk\x1al\n" +
	"\fFileMetadata\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x03R\ttotalSizeB\x06\n" +
	"\x04data\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\x7f\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp2\xdc\f\n" +
	"\n" +
	"WebService\x12w\n" +
	"\x10AuthenticateUser\x120.subtitle_manager.web.v1.AuthenticateUserRequest\x1a1.subtitle_manager.web.v1.AuthenticateUserResponse\x12e\n" +
	"\n" +
	"LogoutUser\x12*.subtitle_manager.web.v1.LogoutUserRequest\x1a+.subtitle_manager.web.v1.LogoutUserResponse\x12\\\n" +
	"\aGetUser\x12'.subtitle_manager.web.v1.GetUserRequest\x1a(.subtitle_manager.web.v1.GetUserResponse\x12e\n" +
	"\n" +
	"UpdateUser\x12*.subtitle_manager.web.v1.UpdateUserRequest\x1a+.subtitle_manager.web.v1.UpdateUserResponse\x12\x86\x01\n" +
	"\x15UpdateUserPreferences\x125.subtitle_manager.web.v1.UpdateUserPreferencesRequest\x1a6.subtitle_manager.web.v1.UpdateUserPreferencesResponse\x12q\n" +
	"\x0eUploadSubtitle\x12..subtitle_manager.web.v1.UploadSubtitleRequest\x1a/.subtitle_manager.web.v1.UploadSubtitleResponse\x12w\n" +
	"\x10DownloadSubtitle\x120.subtitle_manager.web.v1.DownloadSubtitleRequest\x1a1.subtitle_manager.web.v1.DownloadSubtitleResponse\x12t\n" +
	"\x0fSearchSubtitles\x12/.subtitle_manager.web.v1.SearchSubtitlesRequest\x1a0.subtitle_manager.web.v1.SearchSubtitlesResponse\x12z\n" +
	"\x11TranslateSubtitle\x121.subtitle_manager.web.v1.TranslateSubtitleRequest\x1a2.subtitle_manager.web.v1.TranslateSubtitleResponse\x12\x83\x01\n" +
	"\x14GetTranslationStatus\x124.subtitle_manager.web.v1.GetTranslationStatusRequest\x1a5.subtitle_manager.web.v1.GetTranslationStatusResponse\x12z\n" +
	"\x11CancelTranslation\x121.subtitle_manager.web.v1.CancelTranslationRequest\x1a2.subtitle_manager.web.v1.CancelTranslationResponse\x12g\n" +
	"\n" +
	"UploadFile\x12*.subtitle_manager.web.v1.UploadFileRequest\x1a+.subtitle_manager.web.v1.UploadFileResponse(\x01\x12m\n" +
	"\fDownloadFile\x12,.subtitle_manager.web.v1.DownloadFileRequest\x1a-.subtitle_manager.web.v1.DownloadFileResponse0\x01\x12h\n" +
	"\vHealthCheck\x12+.subtitle_manager.web.v1.HealthCheckRequest\x1a,.subtitle_manager.web.v1.HealthCheckResponseB=Z3github.com/jdfalk/subtitle-manager/pkg/proto/web/v1\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_web_v1_web_service_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_web_v1_web_service_proto_goTypes = []any{
	(*AuthenticateUserRequest)(nil),           // 0: subtitle_manager.web.v1.AuthenticateUserRequest
	(*AuthenticateUserResponse)(nil),          // 1: subtitle_manager.web.v1.AuthenticateUserResponse
	(*LogoutUserRequest)(nil),                 // 2: subtitle_manager.web.v1.LogoutUserRequest
	(*LogoutUserResponse)(nil),                // 3: subtitle_manager.web.v1.LogoutUserResponse
	(*GetUserRequest)(nil),                    // 4: subtitle_manager.web.v1.GetUserRequest
	(*GetUserResponse)(nil),                   // 5: subtitle_manager.web.v1.GetUserResponse
	(*UpdateUserRequest)(nil),                 // 6: subtitle_manager.web.v1.UpdateUserRequest
	(*UpdateUserResponse)(nil),                // 7: subtitle_manager.web.v1.UpdateUserResponse
	(*UpdateUserPreferencesRequest)(nil),      // 8: subtitle_manager.web.v1.UpdateUserPreferencesRequest
	(*UpdateUserPreferencesResponse)(nil),     // 9: subtitle_manager.web.v1.UpdateUserPreferencesResponse
	(*UploadSubtitleRequest)(nil),             // 10: subtitle_manager.web.v1.UploadSubtitleRequest
	(*UploadSubtitleResponse)(nil),            // 11: subtitle_manager.web.v1.UploadSubtitleResponse
	(*DownloadSubtitleRequest)(nil),           // 12: subtitle_manager.web.v1.DownloadSubtitleRequest
	(*DownloadSubtitleResponse)(nil),          // 13: subtitle_manager.web.v1.DownloadSubtitleResponse
	(*SearchSubtitlesRequest)(nil),            // 14: subtitle_manager.web.v1.SearchSubtitlesRequest
	(*SearchSubtitlesResponse)(nil),           // 15: subtitle_manager.web.v1.SearchSubtitlesResponse
	(*TranslateSubtitleRequest)(nil),          // 16: subtitle_manager.web.v1.TranslateSubtitleRequest
	(*TranslateSubtitleResponse)(nil),         // 17: subtitle_manager.web.v1.TranslateSubtitleResponse
	(*GetTranslationStatusRequest)(nil),       // 18: subtitle_manager.web.v1.GetTranslationStatusRequest
	(*GetTranslationStatusResponse)(nil),      // 19: subtitle_manager.web.v1.GetTranslationStatusResponse
	(*CancelTranslationRequest)(nil),          // 20: subtitle_manager.web.v1.CancelTranslationRequest
	(*CancelTranslationResponse)(nil),         // 21: subtitle_manager.web.v1.CancelTranslationResponse
	(*UploadFileRequest)(nil),                 // 22: subtitle_manager.web.v1.UploadFileRequest
	(*UploadFileResponse)(nil),                // 23: subtitle_manager.web.v1.UploadFileResponse
	(*DownloadFileRequest)(nil),               // 24: subtitle_manager.web.v1.DownloadFileRequest
	(*DownloadFileResponse)(nil),              // 25: subtitle_manager.web.v1.DownloadFileResponse
	(*HealthCheckRequest)(nil),                // 26: subtitle_manager.web.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),               // 27: subtitle_manager.web.v1.HealthCheckResponse
	nil,                                       // 28: subtitle_manager.web.v1.UpdateUserRequest.MetadataEntry
	nil,                                       // 29: subtitle_manager.web.v1.UpdateUserPreferencesRequest.CustomSettingsEntry
	nil,                                       // 30: subtitle_manager.web.v1.UpdateUserPreferencesResponse.CustomSettingsEntry
	nil,                                       // 31: subtitle_manager.web.v1.UploadSubtitleRequest.MetadataEntry
	nil,                                       // 32: subtitle_manager.web.v1.TranslateSubtitleRequest.OptionsEntry
	(*UploadFileRequest_FileMetadata)(nil),    // 33: subtitle_manager.web.v1.UploadFileRequest.FileMetadata
	(*DownloadFileResponse_FileMetadata)(nil), // 34: subtitle_manager.web.v1.DownloadFileResponse.FileMetadata
}
var file_web_v1_web_service_proto_depIdxs = []int32{
	28, // 0: subtitle_manager.web.v1.UpdateUserRequest.metadata:type_name -> subtitle_manager.web.v1.UpdateUserRequest.MetadataEntry
	29, // 1: subtitle_manager.web.v1.UpdateUserPreferencesRequest.custom_settings:type_name -> subtitle_manager.web.v1.UpdateUserPreferencesRequest.CustomSettingsEntry
	30, // 2: subtitle_manager.web.v1.UpdateUserPreferencesResponse.custom_settings:type_name -> subtitle_manager.web.v1.UpdateUserPreferencesResponse.CustomSettingsEntry
	31, // 3: subtitle_manager.web.v1.UploadSubtitleRequest.metadata:type_name -> subtitle_manager.web.v1.UploadSubtitleRequest.MetadataEntry
	32, // 4: subtitle_manager.web.v1.TranslateSubtitleRequest.options:type_name -> subtitle_manager.web.v1.TranslateSubtitleRequest.OptionsEntry
	33, // 5: subtitle_manager.web.v1.UploadFileRequest.metadata:type_name -> subtitle_manager.web.v1.UploadFileRequest.FileMetadata
	34, // 6: subtitle_manager.web.v1.DownloadFileResponse.metadata:type_name -> subtitle_manager.web.v1.DownloadFileResponse.FileMetadata
	0,  // 7: subtitle_manager.web.v1.WebService.AuthenticateUser:input_type -> subtitle_manager.web.v1.AuthenticateUserRequest
	2,  // 8: subtitle_manager.web.v1.WebService.LogoutUser:input_type -> subtitle_manager.web.v1.LogoutUserRequest
	4,  // 9: subtitle_manager.web.v1.WebService.GetUser:input_type -> subtitle_manager.web.v1.GetUserRequest
	6,  // 10: subtitle_manager.web.v1.WebService.UpdateUser:input_type -> subtitle_manager.web.v1.UpdateUserRequest
	8,  // 11: subtitle_manager.web.v1.WebService.UpdateUserPreferences:input_type -> subtitle_manager.web.v1.UpdateUserPreferencesRequest
	10, // 12: subtitle_manager.web.v1.WebService.UploadSubtitle:input_type -> subtitle_manager.web.v1.UploadSubtitleRequest
	12, // 13: subtitle_manager.web.v1.WebService.DownloadSubtitle:input_type -> subtitle_manager.web.v1.DownloadSubtitleRequest
	14, // 14: subtitle_manager.web.v1.WebService.SearchSubtitles:input_type -> subtitle_manager.web.v1.SearchSubtitlesRequest
	16, // 15: subtitle_manager.web.v1.WebService.TranslateSubtitle:input_type -> subtitle_manager.web.v1.TranslateSubtitleRequest
	18, // 16: subtitle_manager.web.v1.WebService.GetTranslationStatus:input_type -> subtitle_manager.web.v1.GetTranslationStatusRequest
	20, // 17: subtitle_manager.web.v1.WebService.CancelTranslation:input_type -> subtitle_manager.web.v1.CancelTranslationRequest
	22, // 18: subtitle_manager.web.v1.WebService.UploadFile:input_type -> subtitle_manager.web.v1.UploadFileRequest
	24, // 19: subtitle_manager.web.v1.WebService.DownloadFile:input_type -> subtitle_manager.web.v1.DownloadFileRequest
	26, // 20: subtitle_manager.web.v1.WebService.HealthCheck:input_type -> subtitle_manager.web.v1.HealthCheckRequest
	1,  // 21: subtitle_manager.web.v1.WebService.AuthenticateUser:output_type -> subtitle_manager.web.v1.AuthenticateUserResponse
	3,  // 22: subtitle_manager.web.v1.WebService.LogoutUser:output_type -> subtitle_manager.web.v1.LogoutUserResponse
	5,  // 23: subtitle_manager.web.v1.WebService.GetUser:output_type -> subtitle_manager.web.v1.GetUserResponse
	7,  // 24: subtitle_manager.web.v1.WebService.UpdateUser:output_type -> subtitle_manager.web.v1.UpdateUserResponse
	9,  // 25: subtitle_manager.web.v1.WebService.UpdateUserPreferences:output_type -> subtitle_manager.web.v1.UpdateUserPreferencesResponse
	11, // 26: subtitle_manager.web.v1.WebService.UploadSubtitle:output_type -> subtitle_manager.web.v1.UploadSubtitleResponse
	13, // 27: subtitle_manager.web.v1.WebService.DownloadSubtitle:output_type -> subtitle_manager.web.v1.DownloadSubtitleResponse
	15, // 28: subtitle_manager.web.v1.WebService.SearchSubtitles:output_type -> subtitle_manager.web.v1.SearchSubtitlesResponse
	17, // 29: subtitle_manager.web.v1.WebService.TranslateSubtitle:output_type -> subtitle_manager.web.v1.TranslateSubtitleResponse
	19, // 30: subtitle_manager.web.v1.WebService.GetTranslationStatus:output_type -> subtitle_manager.web.v1.GetTranslationStatusResponse
	21, // 31: subtitle_manager.web.v1.WebService.CancelTranslation:output_type -> subtitle_manager.web.v1.CancelTranslationResponse
	23, // 32: subtitle_manager.web.v1.WebService.UploadFile:output_type -> subtitle_manager.web.v1.UploadFileResponse
	25, // 33: subtitle_manager.web.v1.WebService.DownloadFile:output_type -> subtitle_manager.web.v1.DownloadFileResponse
	27, // 34: subtitle_manager.web.v1.WebService.HealthCheck:output_type -> subtitle_manager.web.v1.HealthCheckResponse
	21, // [21:35] is the sub-list for method output_type
	7,  // [7:21] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_web_v1_web_service_proto_init() }
func file_web_v1_web_service_proto_init() {
	if File_web_v1_web_service_proto != nil {
		return
	}
	file_web_v1_web_service_proto_msgTypes[22].OneofWrappers = []any{
		(*uploadFileRequest_Metadata)(nil),
		(*uploadFileRequest_Chunk)(nil),
	}
	file_web_v1_web_service_proto_msgTypes[25].OneofWrappers = []any{
		(*downloadFileResponse_Metadata)(nil),
		(*downloadFileResponse_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_web_v1_web_service_proto_rawDesc), len(file_web_v1_web_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_web_v1_web_service_proto_goTypes,
		DependencyIndexes: file_web_v1_web_service_proto_depIdxs,
		MessageInfos:      file_web_v1_web_service_proto_msgTypes,
	}.Build()
	File_web_v1_web_service_proto = out.File
	file_web_v1_web_service_proto_goTypes = nil
	file_web_v1_web_service_proto_depIdxs = nil
}
