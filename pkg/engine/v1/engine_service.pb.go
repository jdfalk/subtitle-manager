// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: engine/v1/engine_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Transcription Messages
type TranscribeAudioRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestId       *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	AudioFileId     *string                `protobuf:"bytes,2,opt,name=audio_file_id,json=audioFileId" json:"audio_file_id,omitempty"`
	SourceLanguage  *string                `protobuf:"bytes,3,opt,name=source_language,json=sourceLanguage" json:"source_language,omitempty"`
	TargetLanguages []string               `protobuf:"bytes,4,rep,name=target_languages,json=targetLanguages" json:"target_languages,omitempty"`
	Options         *TranscriptionOptions  `protobuf:"bytes,5,opt,name=options" json:"options,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TranscribeAudioRequest) Reset() {
	*x = TranscribeAudioRequest{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscribeAudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeAudioRequest) ProtoMessage() {}

func (x *TranscribeAudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeAudioRequest.ProtoReflect.Descriptor instead.
func (*TranscribeAudioRequest) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{0}
}

func (x *TranscribeAudioRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *TranscribeAudioRequest) GetAudioFileId() string {
	if x != nil && x.AudioFileId != nil {
		return *x.AudioFileId
	}
	return ""
}

func (x *TranscribeAudioRequest) GetSourceLanguage() string {
	if x != nil && x.SourceLanguage != nil {
		return *x.SourceLanguage
	}
	return ""
}

func (x *TranscribeAudioRequest) GetTargetLanguages() []string {
	if x != nil {
		return x.TargetLanguages
	}
	return nil
}

func (x *TranscribeAudioRequest) GetOptions() *TranscriptionOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type TranscriptionOptions struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Model               *string                `protobuf:"bytes,1,opt,name=model" json:"model,omitempty"`
	SpeakerDetection    *bool                  `protobuf:"varint,2,opt,name=speaker_detection,json=speakerDetection" json:"speaker_detection,omitempty"`
	WordTimestamps      *bool                  `protobuf:"varint,3,opt,name=word_timestamps,json=wordTimestamps" json:"word_timestamps,omitempty"`
	ConfidenceThreshold *float32               `protobuf:"fixed32,4,opt,name=confidence_threshold,json=confidenceThreshold" json:"confidence_threshold,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TranscriptionOptions) Reset() {
	*x = TranscriptionOptions{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptionOptions) ProtoMessage() {}

func (x *TranscriptionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptionOptions.ProtoReflect.Descriptor instead.
func (*TranscriptionOptions) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{1}
}

func (x *TranscriptionOptions) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *TranscriptionOptions) GetSpeakerDetection() bool {
	if x != nil && x.SpeakerDetection != nil {
		return *x.SpeakerDetection
	}
	return false
}

func (x *TranscriptionOptions) GetWordTimestamps() bool {
	if x != nil && x.WordTimestamps != nil {
		return *x.WordTimestamps
	}
	return false
}

func (x *TranscriptionOptions) GetConfidenceThreshold() float32 {
	if x != nil && x.ConfidenceThreshold != nil {
		return *x.ConfidenceThreshold
	}
	return 0
}

type TranscribeAudioResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	Status        *string                `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Success       *bool                  `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	ErrorMessage  *string                `protobuf:"bytes,4,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscribeAudioResponse) Reset() {
	*x = TranscribeAudioResponse{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscribeAudioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeAudioResponse) ProtoMessage() {}

func (x *TranscribeAudioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeAudioResponse.ProtoReflect.Descriptor instead.
func (*TranscribeAudioResponse) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{2}
}

func (x *TranscribeAudioResponse) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *TranscribeAudioResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *TranscribeAudioResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *TranscribeAudioResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type GetTranscriptionStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	JobId         *string                `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTranscriptionStatusRequest) Reset() {
	*x = GetTranscriptionStatusRequest{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranscriptionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranscriptionStatusRequest) ProtoMessage() {}

func (x *GetTranscriptionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTranscriptionStatusRequest.ProtoReflect.Descriptor instead.
func (*GetTranscriptionStatusRequest) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetTranscriptionStatusRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *GetTranscriptionStatusRequest) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

type GetTranscriptionStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	Status        *string                `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Progress      *float32               `protobuf:"fixed32,3,opt,name=progress" json:"progress,omitempty"`
	ResultFileIds []string               `protobuf:"bytes,4,rep,name=result_file_ids,json=resultFileIds" json:"result_file_ids,omitempty"`
	Success       *bool                  `protobuf:"varint,5,opt,name=success" json:"success,omitempty"`
	ErrorMessage  *string                `protobuf:"bytes,6,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTranscriptionStatusResponse) Reset() {
	*x = GetTranscriptionStatusResponse{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranscriptionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranscriptionStatusResponse) ProtoMessage() {}

func (x *GetTranscriptionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTranscriptionStatusResponse.ProtoReflect.Descriptor instead.
func (*GetTranscriptionStatusResponse) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetTranscriptionStatusResponse) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *GetTranscriptionStatusResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *GetTranscriptionStatusResponse) GetProgress() float32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *GetTranscriptionStatusResponse) GetResultFileIds() []string {
	if x != nil {
		return x.ResultFileIds
	}
	return nil
}

func (x *GetTranscriptionStatusResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *GetTranscriptionStatusResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type CancelTranscriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	JobId         *string                `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTranscriptionRequest) Reset() {
	*x = CancelTranscriptionRequest{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTranscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTranscriptionRequest) ProtoMessage() {}

func (x *CancelTranscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTranscriptionRequest.ProtoReflect.Descriptor instead.
func (*CancelTranscriptionRequest) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{5}
}

func (x *CancelTranscriptionRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *CancelTranscriptionRequest) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

type CancelTranscriptionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	Cancelled     *bool                  `protobuf:"varint,2,opt,name=cancelled" json:"cancelled,omitempty"`
	Success       *bool                  `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	ErrorMessage  *string                `protobuf:"bytes,4,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTranscriptionResponse) Reset() {
	*x = CancelTranscriptionResponse{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTranscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTranscriptionResponse) ProtoMessage() {}

func (x *CancelTranscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTranscriptionResponse.ProtoReflect.Descriptor instead.
func (*CancelTranscriptionResponse) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{6}
}

func (x *CancelTranscriptionResponse) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *CancelTranscriptionResponse) GetCancelled() bool {
	if x != nil && x.Cancelled != nil {
		return *x.Cancelled
	}
	return false
}

func (x *CancelTranscriptionResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *CancelTranscriptionResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

// Translation Messages
type TranslateSubtitleRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RequestId      *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	SubtitleFileId *string                `protobuf:"bytes,2,opt,name=subtitle_file_id,json=subtitleFileId" json:"subtitle_file_id,omitempty"`
	SourceLanguage *string                `protobuf:"bytes,3,opt,name=source_language,json=sourceLanguage" json:"source_language,omitempty"`
	TargetLanguage *string                `protobuf:"bytes,4,opt,name=target_language,json=targetLanguage" json:"target_language,omitempty"`
	Options        *TranslationOptions    `protobuf:"bytes,5,opt,name=options" json:"options,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TranslateSubtitleRequest) Reset() {
	*x = TranslateSubtitleRequest{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranslateSubtitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateSubtitleRequest) ProtoMessage() {}

func (x *TranslateSubtitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateSubtitleRequest.ProtoReflect.Descriptor instead.
func (*TranslateSubtitleRequest) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{7}
}

func (x *TranslateSubtitleRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *TranslateSubtitleRequest) GetSubtitleFileId() string {
	if x != nil && x.SubtitleFileId != nil {
		return *x.SubtitleFileId
	}
	return ""
}

func (x *TranslateSubtitleRequest) GetSourceLanguage() string {
	if x != nil && x.SourceLanguage != nil {
		return *x.SourceLanguage
	}
	return ""
}

func (x *TranslateSubtitleRequest) GetTargetLanguage() string {
	if x != nil && x.TargetLanguage != nil {
		return *x.TargetLanguage
	}
	return ""
}

func (x *TranslateSubtitleRequest) GetOptions() *TranslationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type TranslationOptions struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Model              *string                `protobuf:"bytes,1,opt,name=model" json:"model,omitempty"`
	PreserveTiming     *bool                  `protobuf:"varint,2,opt,name=preserve_timing,json=preserveTiming" json:"preserve_timing,omitempty"`
	PreserveFormatting *bool                  `protobuf:"varint,3,opt,name=preserve_formatting,json=preserveFormatting" json:"preserve_formatting,omitempty"`
	CustomSettings     map[string]string      `protobuf:"bytes,4,rep,name=custom_settings,json=customSettings" json:"custom_settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TranslationOptions) Reset() {
	*x = TranslationOptions{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranslationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslationOptions) ProtoMessage() {}

func (x *TranslationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslationOptions.ProtoReflect.Descriptor instead.
func (*TranslationOptions) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{8}
}

func (x *TranslationOptions) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *TranslationOptions) GetPreserveTiming() bool {
	if x != nil && x.PreserveTiming != nil {
		return *x.PreserveTiming
	}
	return false
}

func (x *TranslationOptions) GetPreserveFormatting() bool {
	if x != nil && x.PreserveFormatting != nil {
		return *x.PreserveFormatting
	}
	return false
}

func (x *TranslationOptions) GetCustomSettings() map[string]string {
	if x != nil {
		return x.CustomSettings
	}
	return nil
}

type TranslateSubtitleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	Status        *string                `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Success       *bool                  `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	ErrorMessage  *string                `protobuf:"bytes,4,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranslateSubtitleResponse) Reset() {
	*x = TranslateSubtitleResponse{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranslateSubtitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateSubtitleResponse) ProtoMessage() {}

func (x *TranslateSubtitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateSubtitleResponse.ProtoReflect.Descriptor instead.
func (*TranslateSubtitleResponse) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{9}
}

func (x *TranslateSubtitleResponse) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *TranslateSubtitleResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *TranslateSubtitleResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *TranslateSubtitleResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type GetTranslationProgressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	JobId         *string                `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTranslationProgressRequest) Reset() {
	*x = GetTranslationProgressRequest{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranslationProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranslationProgressRequest) ProtoMessage() {}

func (x *GetTranslationProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTranslationProgressRequest.ProtoReflect.Descriptor instead.
func (*GetTranslationProgressRequest) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetTranslationProgressRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *GetTranslationProgressRequest) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

type GetTranslationProgressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	Status        *string                `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Progress      *float32               `protobuf:"fixed32,3,opt,name=progress" json:"progress,omitempty"`
	ResultFileId  *string                `protobuf:"bytes,4,opt,name=result_file_id,json=resultFileId" json:"result_file_id,omitempty"`
	Success       *bool                  `protobuf:"varint,5,opt,name=success" json:"success,omitempty"`
	ErrorMessage  *string                `protobuf:"bytes,6,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTranslationProgressResponse) Reset() {
	*x = GetTranslationProgressResponse{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTranslationProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTranslationProgressResponse) ProtoMessage() {}

func (x *GetTranslationProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTranslationProgressResponse.ProtoReflect.Descriptor instead.
func (*GetTranslationProgressResponse) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetTranslationProgressResponse) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *GetTranslationProgressResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *GetTranslationProgressResponse) GetProgress() float32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *GetTranslationProgressResponse) GetResultFileId() string {
	if x != nil && x.ResultFileId != nil {
		return *x.ResultFileId
	}
	return ""
}

func (x *GetTranslationProgressResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *GetTranslationProgressResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type CancelTranslationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	JobId         *string                `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTranslationRequest) Reset() {
	*x = CancelTranslationRequest{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTranslationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTranslationRequest) ProtoMessage() {}

func (x *CancelTranslationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTranslationRequest.ProtoReflect.Descriptor instead.
func (*CancelTranslationRequest) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{12}
}

func (x *CancelTranslationRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *CancelTranslationRequest) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

type CancelTranslationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	Cancelled     *bool                  `protobuf:"varint,2,opt,name=cancelled" json:"cancelled,omitempty"`
	Success       *bool                  `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	ErrorMessage  *string                `protobuf:"bytes,4,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTranslationResponse) Reset() {
	*x = CancelTranslationResponse{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTranslationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTranslationResponse) ProtoMessage() {}

func (x *CancelTranslationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTranslationResponse.ProtoReflect.Descriptor instead.
func (*CancelTranslationResponse) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{13}
}

func (x *CancelTranslationResponse) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *CancelTranslationResponse) GetCancelled() bool {
	if x != nil && x.Cancelled != nil {
		return *x.Cancelled
	}
	return false
}

func (x *CancelTranslationResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *CancelTranslationResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

// Subtitle Processing Messages
type ConvertSubtitleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	SourceFileId  *string                `protobuf:"bytes,2,opt,name=source_file_id,json=sourceFileId" json:"source_file_id,omitempty"`
	TargetFormat  *string                `protobuf:"bytes,3,opt,name=target_format,json=targetFormat" json:"target_format,omitempty"`
	Options       *ConversionOptions     `protobuf:"bytes,4,opt,name=options" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertSubtitleRequest) Reset() {
	*x = ConvertSubtitleRequest{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertSubtitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertSubtitleRequest) ProtoMessage() {}

func (x *ConvertSubtitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertSubtitleRequest.ProtoReflect.Descriptor instead.
func (*ConvertSubtitleRequest) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{14}
}

func (x *ConvertSubtitleRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *ConvertSubtitleRequest) GetSourceFileId() string {
	if x != nil && x.SourceFileId != nil {
		return *x.SourceFileId
	}
	return ""
}

func (x *ConvertSubtitleRequest) GetTargetFormat() string {
	if x != nil && x.TargetFormat != nil {
		return *x.TargetFormat
	}
	return ""
}

func (x *ConvertSubtitleRequest) GetOptions() *ConversionOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ConversionOptions struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Encoding         *string                `protobuf:"bytes,1,opt,name=encoding" json:"encoding,omitempty"`
	Framerate        *int32                 `protobuf:"varint,2,opt,name=framerate" json:"framerate,omitempty"`
	PreserveMetadata *bool                  `protobuf:"varint,3,opt,name=preserve_metadata,json=preserveMetadata" json:"preserve_metadata,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConversionOptions) Reset() {
	*x = ConversionOptions{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversionOptions) ProtoMessage() {}

func (x *ConversionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversionOptions.ProtoReflect.Descriptor instead.
func (*ConversionOptions) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{15}
}

func (x *ConversionOptions) GetEncoding() string {
	if x != nil && x.Encoding != nil {
		return *x.Encoding
	}
	return ""
}

func (x *ConversionOptions) GetFramerate() int32 {
	if x != nil && x.Framerate != nil {
		return *x.Framerate
	}
	return 0
}

func (x *ConversionOptions) GetPreserveMetadata() bool {
	if x != nil && x.PreserveMetadata != nil {
		return *x.PreserveMetadata
	}
	return false
}

type ConvertSubtitleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResultFileId  *string                `protobuf:"bytes,1,opt,name=result_file_id,json=resultFileId" json:"result_file_id,omitempty"`
	Format        *string                `protobuf:"bytes,2,opt,name=format" json:"format,omitempty"`
	Success       *bool                  `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	ErrorMessage  *string                `protobuf:"bytes,4,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertSubtitleResponse) Reset() {
	*x = ConvertSubtitleResponse{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertSubtitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertSubtitleResponse) ProtoMessage() {}

func (x *ConvertSubtitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertSubtitleResponse.ProtoReflect.Descriptor instead.
func (*ConvertSubtitleResponse) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{16}
}

func (x *ConvertSubtitleResponse) GetResultFileId() string {
	if x != nil && x.ResultFileId != nil {
		return *x.ResultFileId
	}
	return ""
}

func (x *ConvertSubtitleResponse) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *ConvertSubtitleResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ConvertSubtitleResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type ValidateSubtitleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	FileId        *string                `protobuf:"bytes,2,opt,name=file_id,json=fileId" json:"file_id,omitempty"`
	Options       *ValidationOptions     `protobuf:"bytes,3,opt,name=options" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSubtitleRequest) Reset() {
	*x = ValidateSubtitleRequest{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSubtitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSubtitleRequest) ProtoMessage() {}

func (x *ValidateSubtitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSubtitleRequest.ProtoReflect.Descriptor instead.
func (*ValidateSubtitleRequest) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{17}
}

func (x *ValidateSubtitleRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *ValidateSubtitleRequest) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

func (x *ValidateSubtitleRequest) GetOptions() *ValidationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ValidationOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CheckTiming   *bool                  `protobuf:"varint,1,opt,name=check_timing,json=checkTiming" json:"check_timing,omitempty"`
	CheckEncoding *bool                  `protobuf:"varint,2,opt,name=check_encoding,json=checkEncoding" json:"check_encoding,omitempty"`
	CheckFormat   *bool                  `protobuf:"varint,3,opt,name=check_format,json=checkFormat" json:"check_format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationOptions) Reset() {
	*x = ValidationOptions{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationOptions) ProtoMessage() {}

func (x *ValidationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationOptions.ProtoReflect.Descriptor instead.
func (*ValidationOptions) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{18}
}

func (x *ValidationOptions) GetCheckTiming() bool {
	if x != nil && x.CheckTiming != nil {
		return *x.CheckTiming
	}
	return false
}

func (x *ValidationOptions) GetCheckEncoding() bool {
	if x != nil && x.CheckEncoding != nil {
		return *x.CheckEncoding
	}
	return false
}

func (x *ValidationOptions) GetCheckFormat() bool {
	if x != nil && x.CheckFormat != nil {
		return *x.CheckFormat
	}
	return false
}

type ValidateSubtitleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsValid       *bool                  `protobuf:"varint,1,opt,name=is_valid,json=isValid" json:"is_valid,omitempty"`
	Errors        []*ValidationError     `protobuf:"bytes,2,rep,name=errors" json:"errors,omitempty"`
	Warnings      []*ValidationWarning   `protobuf:"bytes,3,rep,name=warnings" json:"warnings,omitempty"`
	Success       *bool                  `protobuf:"varint,4,opt,name=success" json:"success,omitempty"`
	ErrorMessage  *string                `protobuf:"bytes,5,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSubtitleResponse) Reset() {
	*x = ValidateSubtitleResponse{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSubtitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSubtitleResponse) ProtoMessage() {}

func (x *ValidateSubtitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSubtitleResponse.ProtoReflect.Descriptor instead.
func (*ValidateSubtitleResponse) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{19}
}

func (x *ValidateSubtitleResponse) GetIsValid() bool {
	if x != nil && x.IsValid != nil {
		return *x.IsValid
	}
	return false
}

func (x *ValidateSubtitleResponse) GetErrors() []*ValidationError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ValidateSubtitleResponse) GetWarnings() []*ValidationWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *ValidateSubtitleResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ValidateSubtitleResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type ValidationError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          *string                `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Message       *string                `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	LineNumber    *int32                 `protobuf:"varint,3,opt,name=line_number,json=lineNumber" json:"line_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{20}
}

func (x *ValidationError) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *ValidationError) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *ValidationError) GetLineNumber() int32 {
	if x != nil && x.LineNumber != nil {
		return *x.LineNumber
	}
	return 0
}

type ValidationWarning struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          *string                `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Message       *string                `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	LineNumber    *int32                 `protobuf:"varint,3,opt,name=line_number,json=lineNumber" json:"line_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationWarning) Reset() {
	*x = ValidationWarning{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationWarning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationWarning) ProtoMessage() {}

func (x *ValidationWarning) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationWarning.ProtoReflect.Descriptor instead.
func (*ValidationWarning) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{21}
}

func (x *ValidationWarning) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *ValidationWarning) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *ValidationWarning) GetLineNumber() int32 {
	if x != nil && x.LineNumber != nil {
		return *x.LineNumber
	}
	return 0
}

type MergeSubtitlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	FileIds       []string               `protobuf:"bytes,2,rep,name=file_ids,json=fileIds" json:"file_ids,omitempty"`
	Options       *MergeOptions          `protobuf:"bytes,3,opt,name=options" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeSubtitlesRequest) Reset() {
	*x = MergeSubtitlesRequest{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeSubtitlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeSubtitlesRequest) ProtoMessage() {}

func (x *MergeSubtitlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeSubtitlesRequest.ProtoReflect.Descriptor instead.
func (*MergeSubtitlesRequest) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{22}
}

func (x *MergeSubtitlesRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *MergeSubtitlesRequest) GetFileIds() []string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *MergeSubtitlesRequest) GetOptions() *MergeOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type MergeOptions struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OutputFormat   *string                `protobuf:"bytes,1,opt,name=output_format,json=outputFormat" json:"output_format,omitempty"`
	PreserveTiming *bool                  `protobuf:"varint,2,opt,name=preserve_timing,json=preserveTiming" json:"preserve_timing,omitempty"`
	MergeStrategy  *string                `protobuf:"bytes,3,opt,name=merge_strategy,json=mergeStrategy" json:"merge_strategy,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MergeOptions) Reset() {
	*x = MergeOptions{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeOptions) ProtoMessage() {}

func (x *MergeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeOptions.ProtoReflect.Descriptor instead.
func (*MergeOptions) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{23}
}

func (x *MergeOptions) GetOutputFormat() string {
	if x != nil && x.OutputFormat != nil {
		return *x.OutputFormat
	}
	return ""
}

func (x *MergeOptions) GetPreserveTiming() bool {
	if x != nil && x.PreserveTiming != nil {
		return *x.PreserveTiming
	}
	return false
}

func (x *MergeOptions) GetMergeStrategy() string {
	if x != nil && x.MergeStrategy != nil {
		return *x.MergeStrategy
	}
	return ""
}

type MergeSubtitlesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResultFileId  *string                `protobuf:"bytes,1,opt,name=result_file_id,json=resultFileId" json:"result_file_id,omitempty"`
	Success       *bool                  `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	ErrorMessage  *string                `protobuf:"bytes,3,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeSubtitlesResponse) Reset() {
	*x = MergeSubtitlesResponse{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeSubtitlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeSubtitlesResponse) ProtoMessage() {}

func (x *MergeSubtitlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeSubtitlesResponse.ProtoReflect.Descriptor instead.
func (*MergeSubtitlesResponse) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{24}
}

func (x *MergeSubtitlesResponse) GetResultFileId() string {
	if x != nil && x.ResultFileId != nil {
		return *x.ResultFileId
	}
	return ""
}

func (x *MergeSubtitlesResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *MergeSubtitlesResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

// Engine Management Messages
type GetEngineStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       *string                `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEngineStatusRequest) Reset() {
	*x = GetEngineStatusRequest{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEngineStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEngineStatusRequest) ProtoMessage() {}

func (x *GetEngineStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEngineStatusRequest.ProtoReflect.Descriptor instead.
func (*GetEngineStatusRequest) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetEngineStatusRequest) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

type GetEngineStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *string                `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Engines       map[string]string      `protobuf:"bytes,2,rep,name=engines" json:"engines,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ActiveJobs    []*JobStatus           `protobuf:"bytes,3,rep,name=active_jobs,json=activeJobs" json:"active_jobs,omitempty"`
	Success       *bool                  `protobuf:"varint,4,opt,name=success" json:"success,omitempty"`
	ErrorMessage  *string                `protobuf:"bytes,5,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEngineStatusResponse) Reset() {
	*x = GetEngineStatusResponse{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEngineStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEngineStatusResponse) ProtoMessage() {}

func (x *GetEngineStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEngineStatusResponse.ProtoReflect.Descriptor instead.
func (*GetEngineStatusResponse) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetEngineStatusResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *GetEngineStatusResponse) GetEngines() map[string]string {
	if x != nil {
		return x.Engines
	}
	return nil
}

func (x *GetEngineStatusResponse) GetActiveJobs() []*JobStatus {
	if x != nil {
		return x.ActiveJobs
	}
	return nil
}

func (x *GetEngineStatusResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *GetEngineStatusResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type JobStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	Type          *string                `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Status        *string                `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	Progress      *float32               `protobuf:"fixed32,4,opt,name=progress" json:"progress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobStatus) Reset() {
	*x = JobStatus{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatus) ProtoMessage() {}

func (x *JobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatus.ProtoReflect.Descriptor instead.
func (*JobStatus) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{27}
}

func (x *JobStatus) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *JobStatus) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *JobStatus) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *JobStatus) GetProgress() float32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       *string                `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{28}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *string                `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Message       *string                `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Success       *bool                  `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_engine_v1_engine_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_v1_engine_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_engine_v1_engine_service_proto_rawDescGZIP(), []int{29}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *HealthCheckResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

var File_engine_v1_engine_service_proto protoreflect.FileDescriptor

const file_engine_v1_engine_service_proto_rawDesc = "" +
	"\n" +
	"\x1eengine/v1/engine_service.proto\x12\x1asubtitle_manager.engine.v1\"\xfb\x01\n" +
	"\x16TranscribeAudioRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\"\n" +
	"\raudio_file_id\x18\x02 \x01(\tR\vaudioFileId\x12'\n" +
	"\x0fsource_language\x18\x03 \x01(\tR\x0esourceLanguage\x12)\n" +
	"\x10target_languages\x18\x04 \x03(\tR\x0ftargetLanguages\x12J\n" +
	"\aoptions\x18\x05 \x01(\v20.subtitle_manager.engine.v1.TranscriptionOptionsR\aoptions\"\xb5\x01\n" +
	"\x14TranscriptionOptions\x12\x14\n" +
	"\x05model\x18\x01 \x01(\tR\x05model\x12+\n" +
	"\x11speaker_detection\x18\x02 \x01(\bR\x10speakerDetection\x12'\n" +
	"\x0fword_timestamps\x18\x03 \x01(\bR\x0ewordTimestamps\x121\n" +
	"\x14confidence_threshold\x18\x04 \x01(\x02R\x13confidenceThreshold\"\x87\x01\n" +
	"\x17TranscribeAudioResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"U\n" +
	"\x1dGetTranscriptionStatusRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\"\xd2\x01\n" +
	"\x1eGetTranscriptionStatusResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1a\n" +
	"\bprogress\x18\x03 \x01(\x02R\bprogress\x12&\n" +
	"\x0fresult_file_ids\x18\x04 \x03(\tR\rresultFileIds\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\"R\n" +
	"\x1aCancelTranscriptionRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\"\x91\x01\n" +
	"\x1bCancelTranscriptionResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x1c\n" +
	"\tcancelled\x18\x02 \x01(\bR\tcancelled\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"\xff\x01\n" +
	"\x18TranslateSubtitleRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12(\n" +
	"\x10subtitle_file_id\x18\x02 \x01(\tR\x0esubtitleFileId\x12'\n" +
	"\x0fsource_language\x18\x03 \x01(\tR\x0esourceLanguage\x12'\n" +
	"\x0ftarget_language\x18\x04 \x01(\tR\x0etargetLanguage\x12H\n" +
	"\aoptions\x18\x05 \x01(\v2..subtitle_manager.engine.v1.TranslationOptionsR\aoptions\"\xb4\x02\n" +
	"\x12TranslationOptions\x12\x14\n" +
	"\x05model\x18\x01 \x01(\tR\x05model\x12'\n" +
	"\x0fpreserve_timing\x18\x02 \x01(\bR\x0epreserveTiming\x12/\n" +
	"\x13preserve_formatting\x18\x03 \x01(\bR\x12preserveFormatting\x12k\n" +
	"\x0fcustom_settings\x18\x04 \x03(\v2B.subtitle_manager.engine.v1.TranslationOptions.CustomSettingsEntryR\x0ecustomSettings\x1aA\n" +
	"\x13CustomSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x89\x01\n" +
	"\x19TranslateSubtitleResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"U\n" +
	"\x1dGetTranslationProgressRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\"\xd0\x01\n" +
	"\x1eGetTranslationProgressResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1a\n" +
	"\bprogress\x18\x03 \x01(\x02R\bprogress\x12$\n" +
	"\x0eresult_file_id\x18\x04 \x01(\tR\fresultFileId\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\"P\n" +
	"\x18CancelTranslationRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\"\x8f\x01\n" +
	"\x19CancelTranslationResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x1c\n" +
	"\tcancelled\x18\x02 \x01(\bR\tcancelled\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"\xcb\x01\n" +
	"\x16ConvertSubtitleRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12$\n" +
	"\x0esource_file_id\x18\x02 \x01(\tR\fsourceFileId\x12#\n" +
	"\rtarget_format\x18\x03 \x01(\tR\ftargetFormat\x12G\n" +
	"\aoptions\x18\x04 \x01(\v2-.subtitle_manager.engine.v1.ConversionOptionsR\aoptions\"z\n" +
	"\x11ConversionOptions\x12\x1a\n" +
	"\bencoding\x18\x01 \x01(\tR\bencoding\x12\x1c\n" +
	"\tframerate\x18\x02 \x01(\x05R\tframerate\x12+\n" +
	"\x11preserve_metadata\x18\x03 \x01(\bR\x10preserveMetadata\"\x96\x01\n" +
	"\x17ConvertSubtitleResponse\x12$\n" +
	"\x0eresult_file_id\x18\x01 \x01(\tR\fresultFileId\x12\x16\n" +
	"\x06format\x18\x02 \x01(\tR\x06format\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"\x9a\x01\n" +
	"\x17ValidateSubtitleRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x17\n" +
	"\afile_id\x18\x02 \x01(\tR\x06fileId\x12G\n" +
	"\aoptions\x18\x03 \x01(\v2-.subtitle_manager.engine.v1.ValidationOptionsR\aoptions\"\x80\x01\n" +
	"\x11ValidationOptions\x12!\n" +
	"\fcheck_timing\x18\x01 \x01(\bR\vcheckTiming\x12%\n" +
	"\x0echeck_encoding\x18\x02 \x01(\bR\rcheckEncoding\x12!\n" +
	"\fcheck_format\x18\x03 \x01(\bR\vcheckFormat\"\x84\x02\n" +
	"\x18ValidateSubtitleResponse\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid\x12C\n" +
	"\x06errors\x18\x02 \x03(\v2+.subtitle_manager.engine.v1.ValidationErrorR\x06errors\x12I\n" +
	"\bwarnings\x18\x03 \x03(\v2-.subtitle_manager.engine.v1.ValidationWarningR\bwarnings\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"`\n" +
	"\x0fValidationError\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vline_number\x18\x03 \x01(\x05R\n" +
	"lineNumber\"b\n" +
	"\x11ValidationWarning\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vline_number\x18\x03 \x01(\x05R\n" +
	"lineNumber\"\x95\x01\n" +
	"\x15MergeSubtitlesRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x19\n" +
	"\bfile_ids\x18\x02 \x03(\tR\afileIds\x12B\n" +
	"\aoptions\x18\x03 \x01(\v2(.subtitle_manager.engine.v1.MergeOptionsR\aoptions\"\x83\x01\n" +
	"\fMergeOptions\x12#\n" +
	"\routput_format\x18\x01 \x01(\tR\foutputFormat\x12'\n" +
	"\x0fpreserve_timing\x18\x02 \x01(\bR\x0epreserveTiming\x12%\n" +
	"\x0emerge_strategy\x18\x03 \x01(\tR\rmergeStrategy\"}\n" +
	"\x16MergeSubtitlesResponse\x12$\n" +
	"\x0eresult_file_id\x18\x01 \x01(\tR\fresultFileId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"2\n" +
	"\x16GetEngineStatusRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\xd0\x02\n" +
	"\x17GetEngineStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12Z\n" +
	"\aengines\x18\x02 \x03(\v2@.subtitle_manager.engine.v1.GetEngineStatusResponse.EnginesEntryR\aengines\x12F\n" +
	"\vactive_jobs\x18\x03 \x03(\v2%.subtitle_manager.engine.v1.JobStatusR\n" +
	"activeJobs\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\x1a:\n" +
	"\fEnginesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"j\n" +
	"\tJobStatus\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1a\n" +
	"\bprogress\x18\x04 \x01(\x02R\bprogress\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"a\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess2\x9e\v\n" +
	"\rEngineService\x12z\n" +
	"\x0fTranscribeAudio\x122.subtitle_manager.engine.v1.TranscribeAudioRequest\x1a3.subtitle_manager.engine.v1.TranscribeAudioResponse\x12\x8f\x01\n" +
	"\x16GetTranscriptionStatus\x129.subtitle_manager.engine.v1.GetTranscriptionStatusRequest\x1a:.subtitle_manager.engine.v1.GetTranscriptionStatusResponse\x12\x86\x01\n" +
	"\x13CancelTranscription\x126.subtitle_manager.engine.v1.CancelTranscriptionRequest\x1a7.subtitle_manager.engine.v1.CancelTranscriptionResponse\x12\x80\x01\n" +
	"\x11TranslateSubtitle\x124.subtitle_manager.engine.v1.TranslateSubtitleRequest\x1a5.subtitle_manager.engine.v1.TranslateSubtitleResponse\x12\x8f\x01\n" +
	"\x16GetTranslationProgress\x129.subtitle_manager.engine.v1.GetTranslationProgressRequest\x1a:.subtitle_manager.engine.v1.GetTranslationProgressResponse\x12\x80\x01\n" +
	"\x11CancelTranslation\x124.subtitle_manager.engine.v1.CancelTranslationRequest\x1a5.subtitle_manager.engine.v1.CancelTranslationResponse\x12z\n" +
	"\x0fConvertSubtitle\x122.subtitle_manager.engine.v1.ConvertSubtitleRequest\x1a3.subtitle_manager.engine.v1.ConvertSubtitleResponse\x12}\n" +
	"\x10ValidateSubtitle\x123.subtitle_manager.engine.v1.ValidateSubtitleRequest\x1a4.subtitle_manager.engine.v1.ValidateSubtitleResponse\x12w\n" +
	"\x0eMergeSubtitles\x121.subtitle_manager.engine.v1.MergeSubtitlesRequest\x1a2.subtitle_manager.engine.v1.MergeSubtitlesResponse\x12z\n" +
	"\x0fGetEngineStatus\x122.subtitle_manager.engine.v1.GetEngineStatusRequest\x1a3.subtitle_manager.engine.v1.GetEngineStatusResponse\x12n\n" +
	"\vHealthCheck\x12..subtitle_manager.engine.v1.HealthCheckRequest\x1a/.subtitle_manager.engine.v1.HealthCheckResponseB2Z0github.com/jdfalk/subtitle-manager/pkg/engine/v1b\beditionsp\xe8\a"

var (
	file_engine_v1_engine_service_proto_rawDescOnce sync.Once
	file_engine_v1_engine_service_proto_rawDescData []byte
)

func file_engine_v1_engine_service_proto_rawDescGZIP() []byte {
	file_engine_v1_engine_service_proto_rawDescOnce.Do(func() {
		file_engine_v1_engine_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_engine_v1_engine_service_proto_rawDesc), len(file_engine_v1_engine_service_proto_rawDesc)))
	})
	return file_engine_v1_engine_service_proto_rawDescData
}

var file_engine_v1_engine_service_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_engine_v1_engine_service_proto_goTypes = []any{
	(*TranscribeAudioRequest)(nil),         // 0: subtitle_manager.engine.v1.TranscribeAudioRequest
	(*TranscriptionOptions)(nil),           // 1: subtitle_manager.engine.v1.TranscriptionOptions
	(*TranscribeAudioResponse)(nil),        // 2: subtitle_manager.engine.v1.TranscribeAudioResponse
	(*GetTranscriptionStatusRequest)(nil),  // 3: subtitle_manager.engine.v1.GetTranscriptionStatusRequest
	(*GetTranscriptionStatusResponse)(nil), // 4: subtitle_manager.engine.v1.GetTranscriptionStatusResponse
	(*CancelTranscriptionRequest)(nil),     // 5: subtitle_manager.engine.v1.CancelTranscriptionRequest
	(*CancelTranscriptionResponse)(nil),    // 6: subtitle_manager.engine.v1.CancelTranscriptionResponse
	(*TranslateSubtitleRequest)(nil),       // 7: subtitle_manager.engine.v1.TranslateSubtitleRequest
	(*TranslationOptions)(nil),             // 8: subtitle_manager.engine.v1.TranslationOptions
	(*TranslateSubtitleResponse)(nil),      // 9: subtitle_manager.engine.v1.TranslateSubtitleResponse
	(*GetTranslationProgressRequest)(nil),  // 10: subtitle_manager.engine.v1.GetTranslationProgressRequest
	(*GetTranslationProgressResponse)(nil), // 11: subtitle_manager.engine.v1.GetTranslationProgressResponse
	(*CancelTranslationRequest)(nil),       // 12: subtitle_manager.engine.v1.CancelTranslationRequest
	(*CancelTranslationResponse)(nil),      // 13: subtitle_manager.engine.v1.CancelTranslationResponse
	(*ConvertSubtitleRequest)(nil),         // 14: subtitle_manager.engine.v1.ConvertSubtitleRequest
	(*ConversionOptions)(nil),              // 15: subtitle_manager.engine.v1.ConversionOptions
	(*ConvertSubtitleResponse)(nil),        // 16: subtitle_manager.engine.v1.ConvertSubtitleResponse
	(*ValidateSubtitleRequest)(nil),        // 17: subtitle_manager.engine.v1.ValidateSubtitleRequest
	(*ValidationOptions)(nil),              // 18: subtitle_manager.engine.v1.ValidationOptions
	(*ValidateSubtitleResponse)(nil),       // 19: subtitle_manager.engine.v1.ValidateSubtitleResponse
	(*ValidationError)(nil),                // 20: subtitle_manager.engine.v1.ValidationError
	(*ValidationWarning)(nil),              // 21: subtitle_manager.engine.v1.ValidationWarning
	(*MergeSubtitlesRequest)(nil),          // 22: subtitle_manager.engine.v1.MergeSubtitlesRequest
	(*MergeOptions)(nil),                   // 23: subtitle_manager.engine.v1.MergeOptions
	(*MergeSubtitlesResponse)(nil),         // 24: subtitle_manager.engine.v1.MergeSubtitlesResponse
	(*GetEngineStatusRequest)(nil),         // 25: subtitle_manager.engine.v1.GetEngineStatusRequest
	(*GetEngineStatusResponse)(nil),        // 26: subtitle_manager.engine.v1.GetEngineStatusResponse
	(*JobStatus)(nil),                      // 27: subtitle_manager.engine.v1.JobStatus
	(*HealthCheckRequest)(nil),             // 28: subtitle_manager.engine.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 29: subtitle_manager.engine.v1.HealthCheckResponse
	nil,                                    // 30: subtitle_manager.engine.v1.TranslationOptions.CustomSettingsEntry
	nil,                                    // 31: subtitle_manager.engine.v1.GetEngineStatusResponse.EnginesEntry
}
var file_engine_v1_engine_service_proto_depIdxs = []int32{
	1,  // 0: subtitle_manager.engine.v1.TranscribeAudioRequest.options:type_name -> subtitle_manager.engine.v1.TranscriptionOptions
	8,  // 1: subtitle_manager.engine.v1.TranslateSubtitleRequest.options:type_name -> subtitle_manager.engine.v1.TranslationOptions
	30, // 2: subtitle_manager.engine.v1.TranslationOptions.custom_settings:type_name -> subtitle_manager.engine.v1.TranslationOptions.CustomSettingsEntry
	15, // 3: subtitle_manager.engine.v1.ConvertSubtitleRequest.options:type_name -> subtitle_manager.engine.v1.ConversionOptions
	18, // 4: subtitle_manager.engine.v1.ValidateSubtitleRequest.options:type_name -> subtitle_manager.engine.v1.ValidationOptions
	20, // 5: subtitle_manager.engine.v1.ValidateSubtitleResponse.errors:type_name -> subtitle_manager.engine.v1.ValidationError
	21, // 6: subtitle_manager.engine.v1.ValidateSubtitleResponse.warnings:type_name -> subtitle_manager.engine.v1.ValidationWarning
	23, // 7: subtitle_manager.engine.v1.MergeSubtitlesRequest.options:type_name -> subtitle_manager.engine.v1.MergeOptions
	31, // 8: subtitle_manager.engine.v1.GetEngineStatusResponse.engines:type_name -> subtitle_manager.engine.v1.GetEngineStatusResponse.EnginesEntry
	27, // 9: subtitle_manager.engine.v1.GetEngineStatusResponse.active_jobs:type_name -> subtitle_manager.engine.v1.JobStatus
	0,  // 10: subtitle_manager.engine.v1.EngineService.TranscribeAudio:input_type -> subtitle_manager.engine.v1.TranscribeAudioRequest
	3,  // 11: subtitle_manager.engine.v1.EngineService.GetTranscriptionStatus:input_type -> subtitle_manager.engine.v1.GetTranscriptionStatusRequest
	5,  // 12: subtitle_manager.engine.v1.EngineService.CancelTranscription:input_type -> subtitle_manager.engine.v1.CancelTranscriptionRequest
	7,  // 13: subtitle_manager.engine.v1.EngineService.TranslateSubtitle:input_type -> subtitle_manager.engine.v1.TranslateSubtitleRequest
	10, // 14: subtitle_manager.engine.v1.EngineService.GetTranslationProgress:input_type -> subtitle_manager.engine.v1.GetTranslationProgressRequest
	12, // 15: subtitle_manager.engine.v1.EngineService.CancelTranslation:input_type -> subtitle_manager.engine.v1.CancelTranslationRequest
	14, // 16: subtitle_manager.engine.v1.EngineService.ConvertSubtitle:input_type -> subtitle_manager.engine.v1.ConvertSubtitleRequest
	17, // 17: subtitle_manager.engine.v1.EngineService.ValidateSubtitle:input_type -> subtitle_manager.engine.v1.ValidateSubtitleRequest
	22, // 18: subtitle_manager.engine.v1.EngineService.MergeSubtitles:input_type -> subtitle_manager.engine.v1.MergeSubtitlesRequest
	25, // 19: subtitle_manager.engine.v1.EngineService.GetEngineStatus:input_type -> subtitle_manager.engine.v1.GetEngineStatusRequest
	28, // 20: subtitle_manager.engine.v1.EngineService.HealthCheck:input_type -> subtitle_manager.engine.v1.HealthCheckRequest
	2,  // 21: subtitle_manager.engine.v1.EngineService.TranscribeAudio:output_type -> subtitle_manager.engine.v1.TranscribeAudioResponse
	4,  // 22: subtitle_manager.engine.v1.EngineService.GetTranscriptionStatus:output_type -> subtitle_manager.engine.v1.GetTranscriptionStatusResponse
	6,  // 23: subtitle_manager.engine.v1.EngineService.CancelTranscription:output_type -> subtitle_manager.engine.v1.CancelTranscriptionResponse
	9,  // 24: subtitle_manager.engine.v1.EngineService.TranslateSubtitle:output_type -> subtitle_manager.engine.v1.TranslateSubtitleResponse
	11, // 25: subtitle_manager.engine.v1.EngineService.GetTranslationProgress:output_type -> subtitle_manager.engine.v1.GetTranslationProgressResponse
	13, // 26: subtitle_manager.engine.v1.EngineService.CancelTranslation:output_type -> subtitle_manager.engine.v1.CancelTranslationResponse
	16, // 27: subtitle_manager.engine.v1.EngineService.ConvertSubtitle:output_type -> subtitle_manager.engine.v1.ConvertSubtitleResponse
	19, // 28: subtitle_manager.engine.v1.EngineService.ValidateSubtitle:output_type -> subtitle_manager.engine.v1.ValidateSubtitleResponse
	24, // 29: subtitle_manager.engine.v1.EngineService.MergeSubtitles:output_type -> subtitle_manager.engine.v1.MergeSubtitlesResponse
	26, // 30: subtitle_manager.engine.v1.EngineService.GetEngineStatus:output_type -> subtitle_manager.engine.v1.GetEngineStatusResponse
	29, // 31: subtitle_manager.engine.v1.EngineService.HealthCheck:output_type -> subtitle_manager.engine.v1.HealthCheckResponse
	21, // [21:32] is the sub-list for method output_type
	10, // [10:21] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_engine_v1_engine_service_proto_init() }
func file_engine_v1_engine_service_proto_init() {
	if File_engine_v1_engine_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_engine_v1_engine_service_proto_rawDesc), len(file_engine_v1_engine_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_engine_v1_engine_service_proto_goTypes,
		DependencyIndexes: file_engine_v1_engine_service_proto_depIdxs,
		MessageInfos:      file_engine_v1_engine_service_proto_msgTypes,
	}.Build()
	File_engine_v1_engine_service_proto = out.File
	file_engine_v1_engine_service_proto_goTypes = nil
	file_engine_v1_engine_service_proto_depIdxs = nil
}
