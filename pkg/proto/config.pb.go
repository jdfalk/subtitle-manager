// file: proto/config.proto
// version: 1.0.0
// guid: 5d263e60-6079-4a1e-bfcb-82e8feb6f1af

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/config.proto

//go:build !protoopaque

package configpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubtitleManagerConfig struct {
	state           protoimpl.MessageState `protogen:"hybrid.v1"`
	DbPath          *string                `protobuf:"bytes,1,opt,name=db_path,json=dbPath" json:"db_path,omitempty"`
	DbBackend       *string                `protobuf:"bytes,2,opt,name=db_backend,json=dbBackend" json:"db_backend,omitempty"`
	Sqlite3Filename *string                `protobuf:"bytes,3,opt,name=sqlite3_filename,json=sqlite3Filename" json:"sqlite3_filename,omitempty"`
	LogFile         *string                `protobuf:"bytes,4,opt,name=log_file,json=logFile" json:"log_file,omitempty"`
	GoogleApiKey    *string                `protobuf:"bytes,5,opt,name=google_api_key,json=googleApiKey" json:"google_api_key,omitempty"`
	OpenaiApiKey    *string                `protobuf:"bytes,6,opt,name=openai_api_key,json=openaiApiKey" json:"openai_api_key,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SubtitleManagerConfig) Reset() {
	*x = SubtitleManagerConfig{}
	mi := &file_proto_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubtitleManagerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubtitleManagerConfig) ProtoMessage() {}

func (x *SubtitleManagerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SubtitleManagerConfig) GetDbPath() string {
	if x != nil && x.DbPath != nil {
		return *x.DbPath
	}
	return ""
}

func (x *SubtitleManagerConfig) GetDbBackend() string {
	if x != nil && x.DbBackend != nil {
		return *x.DbBackend
	}
	return ""
}

func (x *SubtitleManagerConfig) GetSqlite3Filename() string {
	if x != nil && x.Sqlite3Filename != nil {
		return *x.Sqlite3Filename
	}
	return ""
}

func (x *SubtitleManagerConfig) GetLogFile() string {
	if x != nil && x.LogFile != nil {
		return *x.LogFile
	}
	return ""
}

func (x *SubtitleManagerConfig) GetGoogleApiKey() string {
	if x != nil && x.GoogleApiKey != nil {
		return *x.GoogleApiKey
	}
	return ""
}

func (x *SubtitleManagerConfig) GetOpenaiApiKey() string {
	if x != nil && x.OpenaiApiKey != nil {
		return *x.OpenaiApiKey
	}
	return ""
}

func (x *SubtitleManagerConfig) SetDbPath(v string) {
	x.DbPath = &v
}

func (x *SubtitleManagerConfig) SetDbBackend(v string) {
	x.DbBackend = &v
}

func (x *SubtitleManagerConfig) SetSqlite3Filename(v string) {
	x.Sqlite3Filename = &v
}

func (x *SubtitleManagerConfig) SetLogFile(v string) {
	x.LogFile = &v
}

func (x *SubtitleManagerConfig) SetGoogleApiKey(v string) {
	x.GoogleApiKey = &v
}

func (x *SubtitleManagerConfig) SetOpenaiApiKey(v string) {
	x.OpenaiApiKey = &v
}

func (x *SubtitleManagerConfig) HasDbPath() bool {
	if x == nil {
		return false
	}
	return x.DbPath != nil
}

func (x *SubtitleManagerConfig) HasDbBackend() bool {
	if x == nil {
		return false
	}
	return x.DbBackend != nil
}

func (x *SubtitleManagerConfig) HasSqlite3Filename() bool {
	if x == nil {
		return false
	}
	return x.Sqlite3Filename != nil
}

func (x *SubtitleManagerConfig) HasLogFile() bool {
	if x == nil {
		return false
	}
	return x.LogFile != nil
}

func (x *SubtitleManagerConfig) HasGoogleApiKey() bool {
	if x == nil {
		return false
	}
	return x.GoogleApiKey != nil
}

func (x *SubtitleManagerConfig) HasOpenaiApiKey() bool {
	if x == nil {
		return false
	}
	return x.OpenaiApiKey != nil
}

func (x *SubtitleManagerConfig) ClearDbPath() {
	x.DbPath = nil
}

func (x *SubtitleManagerConfig) ClearDbBackend() {
	x.DbBackend = nil
}

func (x *SubtitleManagerConfig) ClearSqlite3Filename() {
	x.Sqlite3Filename = nil
}

func (x *SubtitleManagerConfig) ClearLogFile() {
	x.LogFile = nil
}

func (x *SubtitleManagerConfig) ClearGoogleApiKey() {
	x.GoogleApiKey = nil
}

func (x *SubtitleManagerConfig) ClearOpenaiApiKey() {
	x.OpenaiApiKey = nil
}

type SubtitleManagerConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DbPath          *string
	DbBackend       *string
	Sqlite3Filename *string
	LogFile         *string
	GoogleApiKey    *string
	OpenaiApiKey    *string
}

func (b0 SubtitleManagerConfig_builder) Build() *SubtitleManagerConfig {
	m0 := &SubtitleManagerConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.DbPath = b.DbPath
	x.DbBackend = b.DbBackend
	x.Sqlite3Filename = b.Sqlite3Filename
	x.LogFile = b.LogFile
	x.GoogleApiKey = b.GoogleApiKey
	x.OpenaiApiKey = b.OpenaiApiKey
	return m0
}

var File_proto_config_proto protoreflect.FileDescriptor

const file_proto_config_proto_rawDesc = "" +
	"\n" +
	"\x12proto/config.proto\x12\x11gcommon.v1.config\x1a!google/protobuf/go_features.proto\"\xe1\x01\n" +
	"\x15SubtitleManagerConfig\x12\x17\n" +
	"\adb_path\x18\x01 \x01(\tR\x06dbPath\x12\x1d\n" +
	"\n" +
	"db_backend\x18\x02 \x01(\tR\tdbBackend\x12)\n" +
	"\x10sqlite3_filename\x18\x03 \x01(\tR\x0fsqlite3Filename\x12\x19\n" +
	"\blog_file\x18\x04 \x01(\tR\alogFile\x12$\n" +
	"\x0egoogle_api_key\x18\x05 \x01(\tR\fgoogleApiKey\x12$\n" +
	"\x0eopenai_api_key\x18\x06 \x01(\tR\fopenaiApiKeyBBZ8github.com/jdfalk/subtitle-manager/pkg/configpb;configpb\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_proto_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_config_proto_goTypes = []any{
	(*SubtitleManagerConfig)(nil), // 0: gcommon.v1.config.SubtitleManagerConfig
}
var file_proto_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_config_proto_init() }
func file_proto_config_proto_init() {
	if File_proto_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_config_proto_rawDesc), len(file_proto_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_config_proto_goTypes,
		DependencyIndexes: file_proto_config_proto_depIdxs,
		MessageInfos:      file_proto_config_proto_msgTypes,
	}.Build()
	File_proto_config_proto = out.File
	file_proto_config_proto_goTypes = nil
	file_proto_config_proto_depIdxs = nil
}
