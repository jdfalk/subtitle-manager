#!/bin/bash
# file: scripts/setup-label-sync.sh
# version: 1.0.0
# guid: d1e2f3a4-b5c6-7890-1234-567890123def

# Setup script for label synchronization in repositories
# Downloads the basic workflow and sets up label sync from ghcommon

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Usage information
usage() {
    cat << EOF
Usage: $0 [OPTIONS]

Setup label synchronization in the current repository.

OPTIONS:
    --schedule CRON     Set custom schedule (default: monthly)
    --mode MODE         Set sync mode: safe|cleanup (default: safe)
    --dry-run          Create workflow with dry-run enabled for testing
    --help             Show this help message

EXAMPLES:
    $0                              # Basic setup with monthly sync
    $0 --schedule "0 2 * * 1"      # Weekly sync on Mondays at 2 AM
    $0 --mode cleanup              # Enable label cleanup (delete extra labels)
    $0 --dry-run                   # Setup for testing only

CRON SCHEDULE EXAMPLES:
    "0 3 1 * *"    - Monthly on 1st at 3 AM UTC
    "0 2 * * 1"    - Weekly on Mondays at 2 AM UTC  
    "0 1 * * *"    - Daily at 1 AM UTC
    "0 9 * * 1-5"  - Weekdays at 9 AM UTC

EOF
}

# Default values
SCHEDULE="0 3 1 * *"  # Monthly on 1st at 3 AM UTC
MODE="safe"
DRY_RUN=false

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --schedule)
            SCHEDULE="$2"
            shift 2
            ;;
        --mode)
            MODE="$2"
            if [[ "$MODE" != "safe" && "$MODE" != "cleanup" ]]; then
                print_error "Invalid mode: $MODE. Must be 'safe' or 'cleanup'"
                exit 1
            fi
            shift 2
            ;;
        --dry-run)
            DRY_RUN=true
            shift
            ;;
        --help)
            usage
            exit 0
            ;;
        *)
            print_error "Unknown option: $1"
            usage
            exit 1
            ;;
    esac
done

# Check if we're in a git repository
if [ ! -d ".git" ]; then
    print_error "This script must be run from the root of a git repository"
    exit 1
fi

# Get repository name
REPO_NAME=$(git remote get-url origin | sed -n 's/.*github\.com[:/]\([^/]*\/[^/.]*\).*/\1/p')
if [ -z "$REPO_NAME" ]; then
    print_error "Could not determine repository name from git remote"
    exit 1
fi

print_status "Setting up label synchronization for repository: $REPO_NAME"

# Create .github/workflows directory if it doesn't exist
mkdir -p .github/workflows

# Determine delete-extra-labels setting
DELETE_EXTRA="false"
if [ "$MODE" = "cleanup" ]; then
    DELETE_EXTRA="true"
    print_warning "Cleanup mode enabled - extra labels will be deleted!"
fi

# Create the workflow file
WORKFLOW_FILE=".github/workflows/label-sync.yml"

cat > "$WORKFLOW_FILE" << EOF
# file: .github/workflows/label-sync.yml
# Automatically generated by setup-label-sync.sh
# Edit manually as needed

name: Sync Labels from ghcommon

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: "Perform a dry run without making changes"
        required: false
        default: $DRY_RUN
        type: boolean
  schedule:
    # $SCHEDULE
    - cron: "$SCHEDULE"

permissions:
  contents: read

jobs:
  sync-labels:
    uses: jdfalk/ghcommon/.github/workflows/reusable-label-sync.yml@main
    with:
      # Sync labels to this repository only
      repositories: \${{ github.repository }}
      # Fetch configuration from ghcommon
      source-repo: "jdfalk/ghcommon"
      source-branch: "main"
      # Delete extra labels: $DELETE_EXTRA ($MODE mode)
      delete-extra-labels: $DELETE_EXTRA
      # Default dry-run setting
      dry-run: \${{ inputs.dry-run || $DRY_RUN }}
    secrets: inherit
EOF

print_success "Created workflow file: $WORKFLOW_FILE"

# Show workflow summary
print_status "Workflow configuration:"
echo "  Repository: $REPO_NAME"
echo "  Schedule: $SCHEDULE"
echo "  Mode: $MODE (delete-extra-labels: $DELETE_EXTRA)"
echo "  Default dry-run: $DRY_RUN"

# Add instructions
cat << EOF

${GREEN}Setup complete!${NC}

${BLUE}Next steps:${NC}
1. Review the generated workflow file: $WORKFLOW_FILE
2. Commit and push the changes:
   ${YELLOW}git add $WORKFLOW_FILE${NC}
   ${YELLOW}git commit -m "feat: add label synchronization workflow"${NC}
   ${YELLOW}git push${NC}

3. Test the workflow:
   - Go to GitHub Actions in your repository
   - Find "Sync Labels from ghcommon" workflow
   - Click "Run workflow" and enable "dry-run" for testing

${BLUE}Configuration options:${NC}
- The workflow syncs labels from jdfalk/ghcommon/labels.json
- Current mode: $MODE (extra labels will $([ "$MODE" = "cleanup" ] && echo "be deleted" || echo "be preserved"))
- Runs on schedule: $SCHEDULE
- Manual execution available via GitHub Actions

${BLUE}Customization:${NC}
- Edit $WORKFLOW_FILE to change schedule or options
- See docs/label-synchronization.md for advanced configuration
- Use examples/workflows/ for more complex setups

EOF

if [ "$MODE" = "cleanup" ]; then
    print_warning "IMPORTANT: Cleanup mode is enabled!"
    print_warning "This will delete any labels not in the ghcommon configuration."
    print_warning "Test with dry-run first to see what would be deleted."
fi