# file: Dockerfile.optimized
# Optimized multi-stage Dockerfile to reduce build times from ~20min to ~3-5min

# Stage 1: Node.js build stage (can be cached separately)
FROM node:20-alpine AS node-builder
WORKDIR /src/webui

# Copy package files first for better caching
COPY webui/package*.json ./
RUN npm ci --legacy-peer-deps --production=false

# Copy source and build
COPY webui/ ./
RUN npm run build

# Stage 2: Go dependencies (can be cached separately)
FROM golang:1.24-alpine AS go-deps
WORKDIR /src

# Install build dependencies
RUN apk add --no-cache \
    gcc \
    musl-dev \
    sqlite-dev

# Copy go.mod and go.sum first for better dependency caching
COPY go.mod go.sum ./
RUN go mod download

# Stage 3: Go build stage
FROM go-deps AS go-builder
WORKDIR /src

# Set environment variable to indicate Docker build
ENV DOCKER_BUILD=1

# Copy source code
COPY . .

# Copy the built web assets from node-builder stage
COPY --from=node-builder /src/webui/dist ./webui/dist

# Note: No need to run 'go generate ./webui' since we already have the dist directory
# The embed.go file will automatically embed the dist directory during go build

# Build the application
# Since we're building in a Linux Alpine container for Linux target,
# we don't need cross-compilation - just build directly
RUN CGO_ENABLED=1 go build -ldflags="-s -w" -o subtitle-manager ./

# Stage 4: Final runtime image
FROM alpine:3.19

# Install runtime dependencies
RUN apk add --no-cache \
    ffmpeg \
    ca-certificates \
    tzdata

# Create non-root user
RUN addgroup -S subtitle && adduser -S subtitle -G subtitle

# Create directories
RUN mkdir -p /config /media && \
    chown -R subtitle:subtitle /config /media

# Copy binary
COPY --from=go-builder /src/subtitle-manager /usr/local/bin/subtitle-manager
RUN chmod +x /usr/local/bin/subtitle-manager

# Switch to non-root user
USER subtitle

# Set default environment variables
ENV SM_CONFIG_FILE=/config/subtitle-manager.yaml \
    SM_DB_PATH=/config/db \
    SM_DB_BACKEND=pebble \
    SM_SQLITE3_FILENAME=subtitle-manager.db \
    SM_LOG_LEVEL=info

EXPOSE 8080

ENTRYPOINT ["/usr/local/bin/subtitle-manager"]
CMD ["web", "--addr", ":8080"]
